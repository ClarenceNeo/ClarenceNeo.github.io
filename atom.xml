<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Clarence</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-22T02:30:48.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Clarence Neo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML 知识点（二）</title>
    <link href="http://yoursite.com/2017/07/22/HTML-%E7%9F%A5%E8%AF%86%E7%82%B92/"/>
    <id>http://yoursite.com/2017/07/22/HTML-知识点2/</id>
    <published>2017-07-22T02:02:59.000Z</published>
    <updated>2017-07-22T02:30:48.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-07-22-HTML-2.png" alt=""></p>
<a id="more"></a>
<h2 id="文档章节标签"><a href="#文档章节标签" class="headerlink" title="文档章节标签"></a>文档章节标签</h2><ul>
<li>body（页面容器标签）</li>
<li>header（页面头部）</li>
<li>nav（导航栏）</li>
<li>aside（侧边栏）</li>
<li>article（独立可重复内容）</li>
<li>section（文档中的一节）</li>
<li>footer（页面尾部）</li>
<li>hx（标题标签）</li>
</ul>
<p><img src="http://oeryvxt85.bkt.clouddn.com/Screen%20Shot%202016-10-15%20at%2011.17.50%20AM.png" alt=""></p>
<h2 id="文本标签"><a href="#文本标签" class="headerlink" title="文本标签"></a>文本标签</h2><h4 id="a-标签"><a href="#a-标签" class="headerlink" title="a 标签"></a>a 标签</h4><p>创建指向另一个文档的链接</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://tech.163.com/"</span>&gt;</span>科技<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://ent.163.com/movie/"</span> <span class="attr">taget</span>=<span class="string">"_self"</span>&gt;</span>电影<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://money.163.com/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>财经<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>创建一个文档内部的锚点</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#pay"</span>&gt;</span>下单支付<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pay"</span>&gt;</span>下单支付...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>链接到 email 地址等</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"mailto:niuzhiyuan94@gmail.com"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"tel:12345678901"</span>&gt;</span>12345678901<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="文本强调标签"><a href="#文本强调标签" class="headerlink" title="文本强调标签"></a>文本强调标签</h4><ul>
<li>em 语义上的强调</li>
<li>strong 重要性的强调<blockquote>
<p>strong &gt; em</p>
</blockquote>
</li>
</ul>
<h4 id="行内容器标签"><a href="#行内容器标签" class="headerlink" title="行内容器标签"></a>行内容器标签</h4><ul>
<li>span 标签</li>
</ul>
<h4 id="换行标签"><a href="#换行标签" class="headerlink" title="换行标签"></a>换行标签</h4><ul>
<li>br 标签</li>
</ul>
<h4 id="引用标签"><a href="#引用标签" class="headerlink" title="引用标签"></a>引用标签</h4><ul>
<li>cite 引用出处（如作品名称，人物）</li>
<li>q 作品中的一段文字（如某人说的一段话）</li>
</ul>
<h4 id="代码标签"><a href="#代码标签" class="headerlink" title="代码标签"></a>代码标签</h4><ul>
<li>code 标签</li>
</ul>
<h4 id="格式化标签（非强调性质）"><a href="#格式化标签（非强调性质）" class="headerlink" title="格式化标签（非强调性质）"></a>格式化标签（非强调性质）</h4><ul>
<li>b 粗体</li>
<li>i 斜体</li>
</ul>
<h2 id="组合内容标签"><a href="#组合内容标签" class="headerlink" title="组合内容标签"></a>组合内容标签</h2><h4 id="分区标签-div"><a href="#分区标签-div" class="headerlink" title="分区标签 div"></a>分区标签 div</h4><ul>
<li>用于功能区分区，作为其它标签的容器</li>
</ul>
<h4 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h4><ul>
<li>p 标签</li>
</ul>
<h4 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h4><ul>
<li>无序列表 ul</li>
<li>有序列表 ol<blockquote>
<p>可以通过type属性控制样式，如：<br><code>&lt;ol type=&quot;a&quot; start=&quot;2&quot;&gt;</code>就是从 b 开始排列</p>
</blockquote>
</li>
<li>自定义列表 dl</li>
<li>pre（已经格式化的内容）</li>
<li>blockquote （大段的引用）可以设置 cite 属性，引用的出处</li>
</ul>
<h2 id="嵌入资源标签"><a href="#嵌入资源标签" class="headerlink" title="嵌入资源标签"></a>嵌入资源标签</h2><h4 id="img"><a href="#img" class="headerlink" title="img"></a>img</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"img"</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">".../cover.jpg"</span> <span class="attr">alt</span>=<span class="string">"封面"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>alt：描述图片含义，在图片加载失败后显示</p>
<h4 id="iframe-嵌入页面"><a href="#iframe-嵌入页面" class="headerlink" title="iframe 嵌入页面"></a>iframe 嵌入页面</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://www.163.com"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="object-embed-嵌入外部资源"><a href="#object-embed-嵌入外部资源" class="headerlink" title="object,embed 嵌入外部资源"></a>object,embed 嵌入外部资源</h4><ul>
<li><p>objece</p>
  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--插件类型--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">type</span>=<span class="string">"application/x-shockwave-flash"</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--插件参数--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"movie"</span> <span class="attr">value</span>=<span class="string">"http://pdfReader.swf"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"flashvars"</span> <span class="attr">value</span>=<span class="string">"http://book.pdf"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">object</span>&gt;</span></div></pre></td></tr></table></figure>
<p>  另一种写法（IE8 以下不支持）：</p>
  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">object</span> <span class="attr">data</span>=<span class="string">"http://pdfReader.swf"</span> <span class="attr">type</span>=<span class="string">"application/x-shockwave-flash"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">"flashvars"</span> <span class="attr">value</span>=<span class="string">"http://book.pdf"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">object</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>embed</p>
  <figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">type</span>=<span class="string">"application/x-shockwave-flash"</span> <span class="attr">src</span>=<span class="string">"http://pdfReader.swf"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"480"</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="video"><a href="#video" class="headerlink" title="video"></a>video</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--controls 控制播放器控制条，poster 插入视频封面（autoplay 属性自动播放，loop 循环播放）--&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">poster</span>=<span class="string">"/img/poster.jpg"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"movie.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"movie.webm"</span> <span class="attr">type</span>=<span class="string">"video/webm"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"movie.ogg"</span> <span class="attr">type</span>=<span class="string">"video/ogg"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--引入视频字幕--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">track</span> <span class="attr">kind</span>=<span class="string">"subtitles"</span> <span class="attr">src</span>=<span class="string">"video.srt"</span> <span class="attr">label</span>=<span class="string">"English"</span>&gt;</span></div><div class="line">  您的浏览器不支持 video 标签。</div></pre></td></tr></table></figure>
<h4 id="audio"><a href="#audio" class="headerlink" title="audio"></a>audio</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>=<span class="string">"controls"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"someaudio.wav"</span> <span class="attr">type</span>=<span class="string">"audio/wav"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"someaudio.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mp3"</span>&gt;</span></div><div class="line">  您的浏览器不支持 audio 标签。</div><div class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="其他图片标签"><a href="#其他图片标签" class="headerlink" title="其他图片标签"></a>其他图片标签</h4><ul>
<li>canvas(基于像素，适用于性能要求比较高的，场景比较复杂的，比如实时数据的展示、游戏等。)</li>
<li>svg（矢量，适用于高保真）</li>
</ul>
<h4 id="热点区域"><a href="#热点区域" class="headerlink" title="热点区域"></a>热点区域</h4><ul>
<li>map</li>
<li>area</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeryvxt85.bkt.clouddn.com/2017-07-22-HTML-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML 知识点（一）</title>
    <link href="http://yoursite.com/2017/07/22/HTML-%E7%9F%A5%E8%AF%86%E7%82%B91/"/>
    <id>http://yoursite.com/2017/07/22/HTML-知识点1/</id>
    <published>2017-07-22T01:29:51.000Z</published>
    <updated>2017-07-22T02:06:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML-简介"><a href="#HTML-简介" class="headerlink" title="HTML 简介"></a>HTML 简介</h2><h4 id="什么是-HTML"><a href="#什么是-HTML" class="headerlink" title="什么是 HTML"></a>什么是 HTML</h4><p>HTML 是英文 Hyper Text Markup Language (超文本标记语言)的缩写。</p>
<h4 id="HTML-文档"><a href="#HTML-文档" class="headerlink" title="HTML 文档"></a>HTML 文档</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--文档声明--&gt;</span></div><div class="line"><span class="meta">&lt;!doctype html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--文档头部--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"音乐..."</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"网易..."</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>网易云音乐 听见好时光<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--文档主体--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">iframe</span>&gt;</span>...<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"g-btmbar"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-文档声明"><a href="#HTML-文档声明" class="headerlink" title="HTML 文档声明"></a>HTML 文档声明</h4><ul>
<li><p>&lt;!doctype&gt;</p>
<ul>
<li>首行、顶格</li>
<li><p>html 4.01（三种类型：严格 strict.dtd，松散 loose.dtd，框架 frameset.dtd）<br><code>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 //EN&quot; &quot;http://www.w3.org/TR/htm14/strict.dtd&quot;&gt;</code></p>
</li>
<li><p>html 5<br><code>&lt;!doctype html&gt;</code></p>
</li>
</ul>
</li>
</ul>
<h4 id="HTML-文档头部"><a href="#HTML-文档头部" class="headerlink" title="HTML 文档头部"></a>HTML 文档头部</h4><p>描述基本属性和信息</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--字符编码，写在第一行--&gt;</span> </div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></div><div class="line">  <span class="comment">&lt;!--标题--&gt;</span> </div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>网易云音乐 听见好时光<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--文档基本信息，content 给搜索引擎提供的--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"音乐..."</span> /&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"网易..."</span> /&gt;</span></div><div class="line">  <span class="comment">&lt;!--移动端设置宽高，缩放等属性--&gt;</span> </div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--浏览器标签上的图标--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">href</span>=<span class="string">"favicon.ico"</span>&gt;</span></div><div class="line">  <span class="comment">&lt;!--css 样式的引入--&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/style.css"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">p&#123;color:#999;&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></div><div class="line">    </div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="HTML-语法"><a href="#HTML-语法" class="headerlink" title="HTML 语法"></a>HTML 语法</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"m-win"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"m-login"</span> <span class="attr">action</span>=<span class="string">"#"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">legend</span>&gt;</span>网易通行证登陆<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"账号"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"密码"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"u-btn"</span> <span class="attr">class</span>=<span class="string">"u-btn"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<ul>
<li>标签都放在 <code>&lt;&gt;</code> 里面</li>
<li>标签都是闭合的，如<code>&lt;form&gt;</code> <code>&lt;/form&gt;</code>，自闭合<code>&lt;input &gt;</code></li>
<li>标签可以有一个或多个属性</li>
<li>标签可以嵌套</li>
<li>注释格式<code>&lt;!-- --&gt;</code></li>
</ul>
<h4 id="常见属性"><a href="#常见属性" class="headerlink" title="常见属性"></a>常见属性</h4><ul>
<li>id 规定元素在页面中唯一的标识</li>
<li>class 规定元素的类名，页面中有统一的功能或样式的元素，可以用 class 标识</li>
<li>style 规定了元素的样式</li>
<li>title 规定了元素额外的一些信息（当鼠标移动上去显示的）</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;HTML-简介&quot;&gt;&lt;a href=&quot;#HTML-简介&quot; class=&quot;headerlink&quot; title=&quot;HTML 简介&quot;&gt;&lt;/a&gt;HTML 简介&lt;/h2&gt;&lt;h4 id=&quot;什么是-HTML&quot;&gt;&lt;a href=&quot;#什么是-HTML&quot; class=&quot;headerli
    
    </summary>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>CSS 编码技巧 （二）</title>
    <link href="http://yoursite.com/2017/07/04/CSS-%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A72/"/>
    <id>http://yoursite.com/2017/07/04/CSS-编码技巧2/</id>
    <published>2017-07-03T19:02:28.000Z</published>
    <updated>2017-07-03T19:26:15.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-07-03-pexels-photo.jpg" alt=""></p>
<a id="more"></a>
<h2 id="关于响应式网页设计"><a href="#关于响应式网页设计" class="headerlink" title="关于响应式网页设计"></a>关于响应式网页设计</h2><p>避免滥用媒体查询，每个媒体查询都会增加成本， 而这种成本是不应轻易上升的。它们的工作原理基于某几个特定的阶梯（亦称“断点”），尽量保证大部分样式代码以弹性的方式来编写，尽量实现弹性可伸缩的布局，并在媒体查询的各个断点区间内指定相应的尺寸。</p>
<p>下面是一些帮你避免使用媒体查询的建议：</p>
<p>使用百分比长度来取代固定长度。如果实在做不到这一点，也应该 尝试使用与视口相关的单位（ <code>vw</code> 、 <code>vh</code> 、 <code>vmin</code> 和 <code>vmax</code> ）， 它们的值解析为视口宽度或高度的百分比。</p>
<p>当你需要在较大分辨率下得到固定宽度时，使用 <code>max-width</code> 而不是 <code>width</code> ，因为它可以适应较小的分辨率，而无需使用媒体查询。</p>
<p>不要忘记为替换元素（比如 <code>img</code> 、 <code>object</code> 、 <code>video</code> 、 <code>iframe</code> 等）设置一个 <code>max-width</code> ，值为 <code>100%</code>。</p>
<p>假如背景图片需要完整地铺满一个容器，不管容器的尺寸如何变化， <code>background-size: cover</code> 这个属性都可以做到。但是，我们也要时刻牢记 —— 带宽并不是无限的，因此在移动网页中通过 CSS 把一张大图缩小显示往往是不太明智的。</p>
<p>当图片（或其他元素）以行列式进行布局时，让视口的宽度来决定列的数量。弹性盒布局（即 <code>Flexbox</code>）或者 <code>display: inline-block</code> 加上常规的文本折行行为，都可以实现这一点。</p>
<p>在使用多列文本时， 指定 <code>column-width</code> （ 列宽 ） 而不是指定 <code>column-count</code> （列数），这样它就可以在较小的屏幕上自动显示为单列布局。</p>
<h2 id="合理使用简写"><a href="#合理使用简写" class="headerlink" title="合理使用简写"></a>合理使用简写</h2><p>你可能知道，以下两行 CSS 代码并不是等价的：</p>
<p><code>background: rebeccapurple;</code><br><code>background-color: rebeccapurple;</code></p>
<p>前者是简写，它可以确保你得到一个纯色背景，但如果你用的是展开式的单个属性（ background-color ），这个背景可能是任何图案，因为同时可能会有一条 background-image 声明在起作用。</p>
<p>在使用展开式属性的写法时，通常会遇到这样的问题：展开式写法并不会帮助你清空所有相关的其他属性，反而可能会干扰你想要达到的效果。合理使用简写是一种良好的防卫性编码方式，可以抵御未来的风险。如果我们要明确地去覆盖某个具体的展开式属性并保留其他相关样式，那就需要用展开式属性。</p>
<p>对于那些接受一个用逗号分隔的列表的属性（比如 background ），展开式属性与简写属性的配合使用会有很好的效果，如下：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">background: url(tr.png) no-repeat top right / 2em 2em, </div><div class="line">            url(br.png) no-repeat bottom right / 2em 2em, </div><div class="line">            url(bl.png) no-repeat bottom left / 2em 2em;</div></pre></td></tr></table></figure>
<p>注意 <code>background-size</code> 和 <code>background-repeat</code> 的值被重复了三遍,如果只为某个属性提供一个值，那 它就会扩散并应用到列表中的每一项。因此，我们可以把这些重复的值从简 写属性中抽出来写成一个展开式属性：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">background</span>: <span class="selector-tag">url</span>(<span class="selector-tag">tr</span><span class="selector-class">.png</span>) <span class="selector-tag">top</span> <span class="selector-tag">right</span>, </div><div class="line">            <span class="selector-tag">url</span>(<span class="selector-tag">br</span><span class="selector-class">.png</span>) <span class="selector-tag">bottom</span> <span class="selector-tag">right</span>, </div><div class="line">            <span class="selector-tag">url</span>(<span class="selector-tag">bl</span><span class="selector-class">.png</span>) <span class="selector-tag">bottom</span> <span class="selector-tag">left</span>; </div><div class="line"><span class="selector-tag">background-size</span>: 2<span class="selector-tag">em</span> 2<span class="selector-tag">em</span>; </div><div class="line"><span class="selector-tag">background-repeat</span>: <span class="selector-tag">no-repeat</span>;</div></pre></td></tr></table></figure>
<h2 id="需要使用预处理器吗"><a href="#需要使用预处理器吗" class="headerlink" title="需要使用预处理器吗"></a>需要使用预处理器吗</h2><p>预处理器会为 CSS 的编写提供提供了一些便利， 比如变量、mixin、函数、规则嵌套、颜色处 理等。<br>如果使用得当，它们在大型项目中可以让代码更加灵活，而 CSS 自身在这方面确实有很大局限。 只要我们在代码健壮性、灵活性和 DRY 方面有追求，就会感受到 CSS 在这方面的局限。不过，预处理器也不是完美无缺的。</p>
<ul>
<li>CSS 的文件体积和复杂度可能会失控。</li>
<li>调试难度会增加。</li>
<li>预处理器在开发过程中引入了一定程度的延时。</li>
<li>每次抽象都必然会带来更高的学习成本，每当有新人加入到我们的代码库中，这个问题都会重演。</li>
<li>另外，别忘了还有抽象泄漏法则：“所有重大的抽象机制在某种程度上都存在泄漏的情况。”</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeryvxt85.bkt.clouddn.com/2017-07-03-pexels-photo.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS 编码技巧（一）</title>
    <link href="http://yoursite.com/2017/07/04/CSS-%E7%BC%96%E7%A0%81%E6%8A%80%E5%B7%A71/"/>
    <id>http://yoursite.com/2017/07/04/CSS-编码技巧1/</id>
    <published>2017-07-03T17:19:05.000Z</published>
    <updated>2017-07-03T19:03:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-07-03-code.jpeg" alt=""></p>
<p>在软件开发中，应尽量保持代码的整洁与可维护性。在 CSS 中我们要做到的是尽量减少改动时要编辑的代码。<br><a id="more"></a></p>
<h2 id="减少重复性代码"><a href="#减少重复性代码" class="headerlink" title="减少重复性代码"></a>减少重复性代码</h2><p>比如下面这段代码：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">button</span> &#123;</div><div class="line">  <span class="attribute">padding</span>: <span class="number">6px</span> <span class="number">16px</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#446d88</span>;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#58a</span> <span class="built_in">linear-gradient</span>(#77a0bb, #58a);</div><div class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</div><div class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span> gray;</div><div class="line">  <span class="attribute">color</span>: white;</div><div class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> -<span class="number">1px</span> <span class="number">1px</span> <span class="number">#335166</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">30px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="font-尺寸更改"><a href="#font-尺寸更改" class="headerlink" title="font 尺寸更改"></a>font 尺寸更改</h4><p>这里字号与行高都是固定的值，以为这是一个按钮，我们可以把文字内容跟容器大小建立关系，所以当某些值相互依赖时，应该把它们的相互关系用代码表达出来，这里行高是字号的 1.5 倍，所以我们可以做如下修改：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">button</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>之后我们会想为什么还把字号定为绝对长度值呢？如果改用百分比或 em 单位是不是更好些。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">button</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">125%</span>; <span class="comment">/* 假设父级的字号是 16px */</span></div><div class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>现在，如果我们改变父级的字号，按钮的尺寸就会随之变化。</p>
<h4 id="使用-em-建立相关性"><a href="#使用-em-建立相关性" class="headerlink" title="使用 em 建立相关性"></a>使用 em 建立相关性</h4><p>因为所有其他效果都是为一个小按钮设计的，并没有跟着缩放。如果我们把这些长度值都改成 em 单位，那这些效果 的值就都变成可缩放的了，而且是依赖字号进行缩放。如下：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">button</span> &#123;</div><div class="line">  <span class="attribute">padding</span>: .<span class="number">3em</span> .<span class="number">8em</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#446d88</span>;</div><div class="line">  <span class="attribute">background</span>: <span class="number">#58a</span> <span class="built_in">linear-gradient</span>(#77a0bb, #58a);</div><div class="line">  <span class="attribute">border-radius</span>: .<span class="number">2em</span>;</div><div class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> .<span class="number">05em</span> .<span class="number">25em</span> gray;</div><div class="line">  <span class="attribute">color</span>: white;</div><div class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> -.<span class="number">05em</span> .<span class="number">05em</span> <span class="number">#335166</span>;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">125%</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>这里我们希望字号和其他尺寸能够跟父级的字号建立关联，因此采用了 em 单位。但在某些 情况下，你可能希望这些尺寸是和根级字号（即 &lt;html&gt; 元素的字号）相关联的，此时使用 em 可能会导致复杂的计算。在这种情况下，你可以使用 rem 单位。在 CSS 中，相关性是一 个很重要的特性，但你得想清楚到底哪些东西是真正相关的。</p>
</blockquote>
<h4 id="color-属性"><a href="#color-属性" class="headerlink" title="color 属性"></a>color 属性</h4><p>假设我们要创建一个红色的取消按钮，或者一个绿色的确定按钮，该怎么做呢？</p>
<p>我们可能需要覆盖四条声明（ <code>border-color</code> 、 <code>background</code> 、 <code>box-shadow</code> 和 <code>text-shadow</code> ），以及设置亮色和暗色版本。</p>
<p>其实只要把半透明的黑色或白色叠加在主色调上，即可产生主色调的亮色和暗色变体，这样就能简单地化解这个难题了：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">button</span> &#123;</div><div class="line">  <span class="attribute">padding</span>: .<span class="number">3em</span> .<span class="number">8em</span>;</div><div class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="built_in">rgba</span>(0, 0, 0, .1);</div><div class="line">  <span class="attribute">background</span>: <span class="number">#58a</span> <span class="built_in">linear-gradient</span>(hsla(0, 0%, 100%, .2), transparent);</div><div class="line">  <span class="attribute">border-radius</span>: .<span class="number">2em</span>;</div><div class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> .<span class="number">05em</span> .<span class="number">25em</span> <span class="built_in">rgba</span>(0, 0, 0, .5);</div><div class="line">  <span class="attribute">color</span>: white;</div><div class="line">  <span class="attribute">text-shadow</span>: <span class="number">0</span> -.<span class="number">05em</span> .<span class="number">05em</span> <span class="built_in">rgba</span>(0, 0, 0, .5);</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">125%</span>;</div><div class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>现在我们只要覆盖 background-color 属性，就可以得到不同颜色版本 的按钮了：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">button</span><span class="selector-class">.cancel</span> &#123; <span class="attribute">background-color</span>: <span class="number">#c00</span>; &#125;</div><div class="line"><span class="selector-tag">button</span><span class="selector-class">.ok</span> &#123; <span class="attribute">background-color</span>: <span class="number">#6b0</span>;&#125;</div></pre></td></tr></table></figure>
<p>这样通过更改背景颜色我们就可以获得不同颜色的按钮了。</p>
<h4 id="其它情况"><a href="#其它情况" class="headerlink" title="其它情况"></a>其它情况</h4><p><strong>1.代码易维护 vs 代码量少</strong></p>
<p>有时候，代码易维护和代码量少不可兼得。比如，我们要为一个元素添加一道 10px 宽的边框，但左侧不加边框。</p>
<p><code>border-width: 10px 10px 10px 0;</code></p>
<p>只要这一条声明就可以搞定了，但如果日后要改动边框的宽度，你需要 同时改三个地方。如果把它拆成两条声明的话，改起来就容易多了，而且可读性或许更好一些：</p>
<p><code>border-width: 10px;</code><br><code>border-left-width: 0;</code></p>
<p><strong>2.currentColor</strong></p>
<p>这个特性让它成为了 CSS 中有史以来的第一个变量，举个例子，假设我们想让所有的水平分割线（所有 <hr> 元素）自动与 文本的颜色保持一致。有了 currentColor 之后，我们只需要这样写：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">hr</span> &#123;</div><div class="line">  <span class="attribute">height</span>: .<span class="number">5em</span>; </div><div class="line">  <span class="attribute">background</span>: currentColor;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>3.继承</strong></p>
<p>inherit 可以用在任何 CSS 属性中， 而且它总是绑定到父元素的计 算值（对伪元素来说，则会取生成该伪元素的宿主元素）。举例来说，要把 表单元素的字体设定为与页面的其他部分相同，你并不需要重复指定字体属 性，只需利用 inherit 的特性即可：</p>
<p><code>input, select, button { font: inherit; }</code></p>
<p>与此类似，要把超链接的颜色设定为与页面中其他文本相同，还是要用 inherit ：</p>
<p><code>a { color: inherit; }</code></p>
<p>这个 inherit 关键字对于背景色同样非常有用。 举个例子， 在创建提 示框的时候，你可能希望它的小箭头能够自动继承背景和边框的样式,如下所示：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.callout</span> &#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.callout</span><span class="selector-pseudo">::before</span> &#123;</div><div class="line">  <span class="attribute">content</span>: <span class="string">""</span>;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: -.<span class="number">4em</span>;</div><div class="line">  <span class="attribute">left</span>: <span class="number">1em</span>;</div><div class="line">  <span class="attribute">padding</span>: .<span class="number">35em</span>;</div><div class="line">  <span class="attribute">background</span>: inherit;</div><div class="line">  <span class="attribute">border</span>: inherit;</div><div class="line">  <span class="attribute">border-right</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">border-bottom</span>: <span class="number">0</span>;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-07-03-Screen%20Shot%202017-07-04%20at%202.25.14%20AM.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeryvxt85.bkt.clouddn.com/2017-07-03-code.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在软件开发中，应尽量保持代码的整洁与可维护性。在 CSS 中我们要做到的是尽量减少改动时要编辑的代码。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浅谈 background 与 border - 半透明边框</title>
    <link href="http://yoursite.com/2017/07/03/CSS-%E5%8D%8A%E9%80%8F%E6%98%8E%E8%BE%B9%E6%A1%86/"/>
    <id>http://yoursite.com/2017/07/03/CSS-半透明边框/</id>
    <published>2017-07-03T15:12:21.000Z</published>
    <updated>2017-07-03T20:00:52.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-07-03-window.jpeg" alt=""></p>
<p>相信你以前肯定尝试过 CSS 中的半透明颜色，比如 rgba() 和 hsla() 。 半透明颜色是 2009 年发生的一场重大变革。尽管半透明颜色很受欢迎，但人们对它的使用基本上还是集中在背景上的。</p>
<a id="more"></a>
<iframe width="100%" height="200" src="//jsfiddle.net/ClarenceNeo/ognn3k2h/4/embedded/result,html,css/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p>假设我们想给一个容器 <code>box1</code> 设置一层白色背景和一道半透明白色边框，body 的背景会从它的半透明边框透上来。我们最开始的尝试可能是这样的：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.box1</span> &#123;</div><div class="line">  <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="built_in">hsla</span>(0, 0%, 100%, .5);</div><div class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这时你会发现，我们的边框去哪儿了啊？而且如果我们 连使用半透明颜色都不能实现半透明边框，那我们还有什么办法？</p>
<p>然后我们尝试给 <code>box2</code> 设置一个背景颜色，然后把边框设置成虚线框：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.box2</span> &#123;</div><div class="line">  <span class="attribute">border</span>: <span class="number">10px</span> dashed <span class="built_in">hsla</span>(0, 0%, 100%, .5);</div><div class="line">  <span class="attribute">background</span>: <span class="number">#2EBC79</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在这里你会发现我们所做的事情并没有让 body 的背景从半透明白色边框处透上来，而是在半透明白色边框处透出了这个容器自己的实色背景，这实际上得到的效果跟纯白实色的边框看起来完全一样。</p>
<p>好消息就是，在 <code>CSS3</code> 中我们可以通过 <code>background-clip</code> 属性来调整上述默认行为所带来的不便。这个属性的初始值是 <code>border-box</code> ，意味着背景会被元素的 <code>border</code> <code>box</code> （边框的外沿框）裁切掉。如果不希望背景侵入边框所在的范围，我们要做 的就是把它的值设为 <code>padding-box</code> ，这样浏览器就会用内边距的外沿来把背景裁切掉。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.box3</span> &#123;</div><div class="line">  <span class="attribute">border</span>: <span class="number">10px</span> solid <span class="built_in">hsla</span>(0, 0%, 100%, .5);</div><div class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</div><div class="line">  <span class="attribute">background-clip</span>: padding-box;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>从而使 <code>box3</code> 得到了半透明的边框。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeryvxt85.bkt.clouddn.com/2017-07-03-window.jpeg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;相信你以前肯定尝试过 CSS 中的半透明颜色，比如 rgba() 和 hsla() 。 半透明颜色是 2009 年发生的一场重大变革。尽管半透明颜色很受欢迎，但人们对它的使用基本上还是集中在背景上的。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>论CSS中可使用的font-size的长度单位</title>
    <link href="http://yoursite.com/2017/07/02/CSS-%E9%95%BF%E5%BA%A6%E5%8D%95%E4%BD%8D/"/>
    <id>http://yoursite.com/2017/07/02/CSS-长度单位/</id>
    <published>2017-07-02T15:19:05.000Z</published>
    <updated>2017-07-02T15:25:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://p0.qhimg.com/t01f60bf6d73cff5170.png" alt="A Walkthrough of CSS Length Units You Can Use for Font Size"></p>
<p>CSS给开发者提供了许多种长度单位，用于各种不同的CSS属性，如<code>margin</code>，<code>padding</code>，<code>line-height</code>还有<code>font-size</code>。为了满足不同的需求，我们有了各种各样的长度单位。即使你可以给某一CSS属性赋予相同的值，其背后的计算逻辑也是不一样的。不同情况下，适用的长度单位是不同的。例如，如果你需要元素的<code>width</code>或者<code>height</code>依赖于视窗的宽度或者高度，那么最可靠的长度单位就是<code>vh</code>，<code>vw</code>，<code>vmin</code>以及<code>vmax</code>。</p>
<p>本文里， 你可以学习到不同的长度单位，以及它们是如何影响其元素中的字体大小的。</p>
<a id="more"></a>
<h2 id="像素单位-px"><a href="#像素单位-px" class="headerlink" title="像素单位(px)"></a>像素单位(px)</h2><p>像素是固定的长度单位。它们是根据用户屏幕上的每一个点的尺寸确定的。然而，现在的设备通常都有不同的像素密度。意即，当我们说有些设备的像素大小是标准设备的1/4时，它们的实际像素密度就是标准设备的四倍。不过这个差异可以通过使用参考像素<a href="https://drafts.csswg.org/css-values-3/#reference-pixel" target="_blank" rel="external">reference pixel</a>来避免。参考像素是指，在约一臂长的距离处（大约28英寸）「译者注：约71厘米」，在像素密度为96DPI的屏幕上的一个像素的尺寸大小。也就是说，一个像素的宽高约等于0.26mm。</p>
<p>使用像素设置文字元素的font-size既难维护，又对用户不那么友好。如果你总重新设计一个非常大的网站，改变所有元素的文字大小可能变成一个梦魇。你也许不得不修改很多元素的<code>font-size</code>，使得页面在不同断点下适用不同的屏幕尺寸。更有甚者，如果用户想通过设置浏览器的文字大小让文字变大或者变小，就不能生效了。</p>
<p>让我们看一下对不同元素使用像素设置<code>font-size</code>会有怎样的效果。下面是我们接下来要用来作为例子的的部分代码。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-box"</span>&gt;</span></div><div class="line">  This text is directly inside the parent `div` element.</div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>This is the first paragraph of our container.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>The second paragraph contains a link to <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://en.wikipedia.org/"</span>&gt;</span>WikiPedia<span class="tag">&lt;/<span class="name">a</span>&gt;</span>, the free encyclopedia.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>I have also included a link to SitePoint as a direct child of the containing `div` element.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.sitepoint.com/"</span>&gt;</span>A link to SitePoint.<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>下面是CSS给不同元素设置的字体大小。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">code</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">p</span>, <span class="selector-tag">a</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">22px</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参见 <a href="http://codepen.io/" target="_blank" rel="external">CodePen</a>上 <a href="https://codepen.io/SitePoint/pen/YVLGbv/" target="_blank" rel="external">使用像素设置字体大小</a>（By<a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a>）。</p>
<p>正如你所见，每个元素的<code>font-size</code>和定义的像素值是相同的。这和元素嵌套并无关系。例如，两个链接的<code>font-size</code>都是22px。你可以尝试修改浏览器设置的字体大小，但你会发现，并不能生效。</p>
<p>简而言之，缺乏灵活性是使用像素设置元素<code>font-size</code>的缺点，应当避免。</p>
<h2 id="Em"><a href="#Em" class="headerlink" title="Em"></a>Em</h2><p>使用em作为长度单位可以帮你避免任何被用户设置覆盖产生的问题。设置<code>font-size</code>为1em的元素实际高度依赖与浏览器设置。除非用户或者你在其他地方设置，其默认大小是16px。</p>
<p>元素实际的<code>font-size</code>是根据其继承的字体大小计算出的。也就是说，如果一个元素继承的<code>font-size</code>是25px，那么设置该元素为2em时，其实际大小就是50px。</p>
<p>接下来的CSS代码把所有的元素的<code>font-size</code>都设置成em单位。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">code</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">p</span>, <span class="selector-tag">a</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参加<a href="http://codepen.io/" target="_blank" rel="external">CodePen</a>里的这个<a href="https://codepen.io/SitePoint/pen/eWrdqd/" target="_blank" rel="external">Setting Font Size in em Units</a>（By<a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a>）</p>
<p>前例中的第二个<code>div</code>是在另一个<code>div</code>元素里。我们同样设置<code>div</code>的元素<code>font-size</code>为1.2em。也就是说，第二个<code>div</code>的<code>font-size</code>是前一个<code>div</code>的1.2倍。例如，计算出的维基百科链接的<code>font-size</code>，在第一个div里是19.2px，但在第二个<code>div</code>里的是23.04px。比例约等于1.2。</p>
<p>如果你希望在一个自适应性的网站中根据不同的断点设置放大或者缩小不同元素的字体大小，你可以给<code>html</code>和<code>body</code>在不同断点下设置不同的<code>font-size</code>。这样其中的元素就都能够缩放了。</p>
<p>由于这一单位的具体值取决于给定元素继承的<code>font-size</code>，因此，如果要单独设置网站的某些部分的字体大小，比如独立的模块中的元素，则这一单位很有效。</p>
<h2 id="Rem"><a href="#Rem" class="headerlink" title="Rem"></a>Rem</h2><p>Em唯一的问题就是有时候我们并不需要子元素的<code>font-size</code>随着父元素的<code>font-size</code>一起变化。继承<code>font-size</code>的逻辑会给计算整个元素的实际大小增加额外的复杂度。</p>
<p>你可以通过使用rem来避免这一缺陷。设置为1rem的值会让元素和root元素的<code>font-size</code>大小相同。这样你就不需要考虑字体<code>font-size</code>的继承问题了。</p>
<p>下面的CSS是把容器<code>div</code>的<code>font-size</code>设置为<code>rem</code>单位值。其他部分的元素依然是使用<code>em</code>作为<code>font-size</code>的单位。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">1.2rem</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">code</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">p</span>, <span class="selector-tag">a</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参见<a href="https://codepen.io/" target="_blank" rel="external">CodePen</a>上<a href="https://codepen.io/SitePoint/pen/gWzLYq/" target="_blank" rel="external">使用rem设置字体大小</a>的例子（by <a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a>）。</p>
<p>容器<code>div</code>的<code>font-size</code>设置为rem，避免了字体大小的继承关系。</p>
<p>正如本例那样，你可以使用这个这个单位，给某个不同模块设置对应的<code>font-size</code>。这一来，就能让模块内所有元素基于他们的父元素设置<code>font-size</code>，也可以让整个模块独立出来。</p>
<h2 id="百分比"><a href="#百分比" class="headerlink" title="百分比"></a>百分比</h2><p>使用百分比和em的计算行为相似。它们常用在自适应网站设计中与根据不同的页面宽度断点设置不同的字体大小。正如下例:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">html</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">62.5%</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">2rem</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">code</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">0.9em</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">p</span>, <span class="selector-tag">a</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: <span class="number">1em</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为浏览器的默认<code>font-size</code>是16px，所以<code>html</code>的元素<code>font-size</code>为62.5%的正好就是10px。这样就让页面其他的字体大小计算相对容易。例如，你可以调整一个元素的<code>font-size</code>为3rem，使其值为30px，或者4.2rem也就是42px，等等。</p>
<p>参加<a href="https://codepen.io/" target="_blank" rel="external">CodePen</a>上的<a href="https://codepen.io/SitePoint/pen/BRxQye/" target="_blank" rel="external">使用百分比设置字体大小</a>的例子，（by <a href="https://codepen.io/SitePoint/" target="_blank" rel="external">@SitePoint</a>）。</p>
<h2 id="视窗单位（vw，vh，vmin，vmax）"><a href="#视窗单位（vw，vh，vmin，vmax）" class="headerlink" title="视窗单位（vw，vh，vmin，vmax）"></a>视窗单位（vw，vh，vmin，vmax）</h2><p>视窗单位非常有趣。它们使你可以根据视窗的尺寸大小控制字体的<code>font-size</code>。如果使用得当，它们还可以避免通过不同断点设置字体大小的实现代码。这是因为这些单位值会随着视窗的高度、宽度做连续性的变化。例如，1vw在视窗为400px宽时是4px，在视窗宽度为1000px时，就变成了10px。SitePoint上已经有一篇文章专门讨论<a href="https://www.sitepoint.com/css-viewport-units-quick-start/" target="_blank" rel="external">视窗单位和它们的应用场景</a>。想了解的话可以去看一下那篇文章。</p>
<p>参加<a href="http://codepen.io" target="_blank" rel="external">CodePen</a>上的<a href="https://codepen.io/SitePoint/pen/EmLNVv/" target="_blank" rel="external">使用视窗单位设置字体大小</a>的例子。（By<a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a>）。</p>
<p>使用视窗单位的问题就是计算出的<code>font-size</code>可能会让字体不适合阅读，字体有可能非常小或者非常大。一个小技巧就是在使用视窗单位的同时，也使用其他字体设置，避免字体过大或者过小。这个技巧在<a href="https://zellwk.com/blog/viewport-based-typography/" target="_blank" rel="external">视窗单位的基础排版</a>一文中有具体解释。</p>
<h2 id="其他绝对值单位"><a href="#其他绝对值单位" class="headerlink" title="其他绝对值单位"></a>其他绝对值单位</h2><p>CSS也允许其他很多绝对值单位，这些单位在屏幕排版的情况下使用较少，更多是用在传统的打印介质中。你可以使用pt或者pc设置打印的字体大小版式。这些值分别使用0.0123或者0.1666英寸为单位。类似的，你还可以使用英寸（in），厘米（cm）和毫米（mm）来设置页面的打印边距。</p>
<h2 id="使用关键字来设置字体大小"><a href="#使用关键字来设置字体大小" class="headerlink" title="使用关键字来设置字体大小"></a>使用关键字来设置字体大小</h2><p>另一个选择是使用关键字设置<code>font-size</code>。有两种类型的关键字：绝对和相对的。绝对值关键字常用在指定字体大小，其值是根据不同的用户浏览器计算出的一个数据表里的某项。绝对值关键字有：<code>xx-small</code>，<code>x-small</code>，<code>small</code>，<code>medium</code>，<code>large</code>，<code>x-large</code>以及<code>xx-large</code>。</p>
<p>如果你选择使用相对值关键字，那么<code>font-size</code>就会根据在表里个各项以及该元素的父元素的<code>font-size</code>计算决定。有两个相对值关键字：<code>larger</code>以及<code>smaller</code>。如果父元素的<code>font-size</code>是<code>x-small</code>，其子元素的<code>font-size</code>设置成<code>larger</code>，那么就相当于子元素的<code>font-size</code>是<code>small</code>。参见下例：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">div</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: larger;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">code</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: smaller;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-tag">p</span>, <span class="selector-tag">a</span> &#123;</div><div class="line">  <span class="attribute">font-size</span>: small;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>参见<a href="http://codepen.io" target="_blank" rel="external">CodePen</a>上的<a href="http://codepen.io/SitePoint/pen/YVLpwO/" target="_blank" rel="external">使用关键字设置font-size</a>的例子。（By<a href="http://codepen.io/SitePoint" target="_blank" rel="external">@SitePoint</a>）。</p>
<p>例中，第二个<code>div</code>是在另一个<code>div</code>之内。因为我们把<code>div</code>的<code>font-size</code>设置成<code>larger</code>，因此增加了嵌套内的第二个容器的<code>div</code>的字体大小。另外，嵌套对于段落中的文字没有效果。这是因为它们的<code>font-size</code>是用绝对值关键字设置的。</p>
<h2 id="浏览器支持"><a href="#浏览器支持" class="headerlink" title="浏览器支持"></a>浏览器支持</h2><p>在决定在生产环境上使用哪种单位之前，你应该先确定你的目标浏览器能够支持。</p>
<p>绝对值单位比如px，pt，pc，in，cm和mm是在所有浏览器都支持的。类似的，em单位也是所有主流浏览器都支持的，包括老一点版本的IE。</p>
<p>但是，rem并不能在IE8或者更低版本的浏览器支持。即便在IE9或者IE10的版本里，使用rem给缩写的<code>font</code>属性设置字体大小时，都可能使赋值失败。这两个浏览器也不支持给伪元素使用rem单位。</p>
<p>本文讨论的所有单位中，视窗单位的浏览器支持是最少的。记住IE11和Edge都不支持vmax单位。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>本文里，我们讨论了在CSS中使用不同单位长度以及它们各自的不同之处。总的来说，你可以尽量避免使用绝对单位，应该多尝试使用相对单位。在相对单位里，你应该在模块当中使用em设置字体大小，给独立模块使用rem单位，例如给一个模块的根元素使用rem。你也可以结合使用视窗单位和其他单位，来保证你的排版会随着视窗宽高变化而自动适应。</p>
<blockquote>
<p>本文转载自：<a href="http://www.zcfy.cc" target="_blank" rel="external">众成翻译</a><br>译者：<a href="http://www.zcfy.cc/@Doraemonls" target="_blank" rel="external">Doraemonls</a><br>链接：<a href="http://www.zcfy.cc/article/3256" target="_blank" rel="external">http://www.zcfy.cc/article/3256</a><br>原文：<a href="https://www.sitepoint.com/a-walkthrough-of-css-length-units-you-can-use-for-font-size/" target="_blank" rel="external">https://www.sitepoint.com/a-walkthrough-of-css-length-units-you-can-use-for-font-size/</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://p0.qhimg.com/t01f60bf6d73cff5170.png&quot; alt=&quot;A Walkthrough of CSS Length Units You Can Use for Font Size&quot;&gt;&lt;/p&gt;
&lt;p&gt;CSS给开发者提供了许多种长度单位，用于各种不同的CSS属性，如&lt;code&gt;margin&lt;/code&gt;，&lt;code&gt;padding&lt;/code&gt;，&lt;code&gt;line-height&lt;/code&gt;还有&lt;code&gt;font-size&lt;/code&gt;。为了满足不同的需求，我们有了各种各样的长度单位。即使你可以给某一CSS属性赋予相同的值，其背后的计算逻辑也是不一样的。不同情况下，适用的长度单位是不同的。例如，如果你需要元素的&lt;code&gt;width&lt;/code&gt;或者&lt;code&gt;height&lt;/code&gt;依赖于视窗的宽度或者高度，那么最可靠的长度单位就是&lt;code&gt;vh&lt;/code&gt;，&lt;code&gt;vw&lt;/code&gt;，&lt;code&gt;vmin&lt;/code&gt;以及&lt;code&gt;vmax&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;本文里， 你可以学习到不同的长度单位，以及它们是如何影响其元素中的字体大小的。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS 垂直居中</title>
    <link href="http://yoursite.com/2017/06/26/CSS-%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2017/06/26/CSS-垂直居中布局/</id>
    <published>2017-06-26T11:49:06.000Z</published>
    <updated>2017-07-03T20:02:44.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-07-02-Screen%20Shot%202016-09-16%20at%204.53.51%20PM.png" alt=""></p>
<blockquote>
<p>“44 年前我们就把人类送上月球了， 但现在我们仍然无法在 CSS 中 实现垂直居中。”</p>
<p>—— <a href="https://twitter.com/jsa/ status/358603820516917249" target="_blank" rel="external">James Anderson</a></p>
</blockquote>
<p>在 CSS 中对元素进行水平居中是非常简单的：</p>
<ul>
<li><p>如果它是一个行内元素， 就对它的父元素应用 text-align: center ；</p>
</li>
<li><p>如果它是一个块级元素，就对 它自身应用 margin: auto 。</p>
</li>
</ul>
<p>但是一旦涉及到垂直居中绝对是一个难题。</p>
<a id="more"></a>
<h3 id="表格布局法"><a href="#表格布局法" class="headerlink" title="表格布局法"></a>表格布局法</h3><h4 id="table-cell-vertical-align-middle"><a href="#table-cell-vertical-align-middle" class="headerlink" title="table-cell + vertical-align: middle;"></a>table-cell + vertical-align: middle;</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.24.10%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: table-cell;</div><div class="line">  <span class="attribute">verical-align</span>: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>设置父元素，让它变为一个单元格，再增加 <code>verical-align: middle;</code> 属性。效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.27.53%20PM.png" alt=""></p>
<p>优点：兼容性比较好（IE8 以上，兼容性解决：把 HTML 结构换为表结构）。</p>
<h4 id="table-table-cell-vertical-align-middle"><a href="#table-table-cell-vertical-align-middle" class="headerlink" title="table + table-cell + vertical-align: middle;"></a>table + table-cell + vertical-align: middle;</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span></div><div class="line">       Unknown stuff to be centered.</div><div class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span> &#123;</div><div class="line">  <span class="attribute">display</span>: table;</div><div class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span> &#123;</div><div class="line">  <span class="attribute">display</span>: table-cell;</div><div class="line">  <span class="attribute">text-align</span>: center;</div><div class="line">  <span class="attribute">vertical-align</span>: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>优点：兼容性好。<br>缺点：需要用到一些冗余的 HTML 元素。</p>
<h3 id="行内块法"><a href="#行内块法" class="headerlink" title="行内块法"></a>行内块法</h3><p><img src="http://oeryvxt85.bkt.clouddn.com/2017-06-26-ghost.png" alt=""></p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span> <span class="attr">style</span>=<span class="string">"height: 300px;"</span>&gt;</span>    </div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"centered"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Some text<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But he stole up to us again, and suddenly clapping his hand on my shoulder, said&amp;mdash;"Did ye see anything looking like men going towards that ship a while ago?"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span> <span class="attr">style</span>=<span class="string">"height: 200px;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"centered"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Some text<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But he stole up to us again, and suddenly clapping his hand on my shoulder, said&amp;mdash;"Did ye see anything looking like men going towards that ship a while ago?"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"block"</span> <span class="attr">style</span>=<span class="string">"height: 600px;"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"centered"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Some text<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>But he stole up to us again, and suddenly clapping his hand on my shoulder, said&amp;mdash;"Did ye see anything looking like men going towards that ship a while ago?"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>    </div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">.block &#123;</div><div class="line">  text-align: center;</div><div class="line">  background: #c0c0c0;</div><div class="line">  border: #a0a0a0 solid 1px;</div><div class="line">  margin: 20px;</div><div class="line">&#125;</div><div class="line"> </div><div class="line">.block:before &#123;</div><div class="line">  content: '\200B'; // 零宽度空格</div><div class="line">/*   content: '';</div><div class="line">  margin-left: -0.25em; */</div><div class="line">  display: inline-block;</div><div class="line">  height: 100%; </div><div class="line">  vertical-align: middle;</div><div class="line"> &#125;</div><div class="line"> </div><div class="line">.centered &#123;</div><div class="line">  display: inline-block;</div><div class="line">  vertical-align: middle;</div><div class="line">  width: 300px;</div><div class="line">  padding: 10px 15px;</div><div class="line">  border: #a0a0a0 solid 1px;</div><div class="line">  background: #f5f5f5;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h2 id="基于绝对定位的方法"><a href="#基于绝对定位的方法" class="headerlink" title="基于绝对定位的方法"></a>基于绝对定位的方法</h2><h4 id="已知元素宽高"><a href="#已知元素宽高" class="headerlink" title="已知元素宽高"></a>已知元素宽高</h4><p><img src="http://oeryvxt85.bkt.clouddn.com/2017-06-26-Screen%20Shot%202017-06-26%20at%205.24.14%20PM.png" alt=""></p>
<ul>
<li>方法一：absolute + margin</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">main</span> &#123;</div><div class="line">  <span class="attribute">position</span>: absolute; </div><div class="line">  <span class="attribute">top</span>: <span class="number">50%</span>; </div><div class="line">  <span class="attribute">left</span>: <span class="number">50%</span>; </div><div class="line">  <span class="attribute">margin-top</span>: -<span class="number">3em</span>; <span class="comment">/* 6/2 = 3 */</span></div><div class="line">  <span class="attribute">margin-left</span>: -<span class="number">9em</span>; <span class="comment">/* 18/2 = 9 */</span> </div><div class="line">  <span class="attribute">width</span>: <span class="number">18em</span>; </div><div class="line">  <span class="attribute">height</span>: <span class="number">6em</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>方法二：absolute + calc()</li>
</ul>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">main</span> &#123; </div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: <span class="built_in">calc</span>(50% - 3em);</div><div class="line">  <span class="attribute">left</span>: <span class="built_in">calc</span>(50% - 9em); </div><div class="line">  <span class="attribute">width</span>: <span class="number">18em</span>; </div><div class="line">  <span class="attribute">height</span>: <span class="number">6em</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="元素宽高未知"><a href="#元素宽高未知" class="headerlink" title="元素宽高未知"></a>元素宽高未知</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">main</span> &#123; </div><div class="line">  <span class="attribute">position</span>: absolute; </div><div class="line">  <span class="attribute">top</span>: <span class="number">50%</span>; </div><div class="line">  <span class="attribute">left</span>: <span class="number">50%</span>; </div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%, -50%); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="基于视口单位的解决方案"><a href="#基于视口单位的解决方案" class="headerlink" title="基于视口单位的解决方案"></a>基于视口单位的解决方案</h2><p>使用基于视口高度的单位（vw, vh）。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">main</span> &#123; </div><div class="line">  <span class="attribute">width</span>: <span class="number">18em</span>; </div><div class="line">  <span class="attribute">padding</span>: <span class="number">1em</span> <span class="number">1.5em</span>; </div><div class="line">  <span class="attribute">margin</span>: <span class="number">50vh</span> auto <span class="number">0</span>; </div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-50%); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>适用局限，只适用于相对于窗口居中。</p>
<h2 id="基于-Flexbox-的解决方案"><a href="#基于-Flexbox-的解决方案" class="headerlink" title="基于 Flexbox 的解决方案"></a>基于 Flexbox 的解决方案</h2><p>先给这个待居中元素的父元素设置 <code>display: flex</code> （在这个例子中是 <body> 元素），再给这个元素自身设置 <code>margin: auto</code></body></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">body &#123; </div><div class="line">  display: flex; </div><div class="line">  min-height: 100vh; </div><div class="line">  margin: 0; </div><div class="line">&#125;</div><div class="line"></div><div class="line">main &#123; </div><div class="line">  margin: auto; // 水平垂直居中</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="将匿名容器（即没有被标签包裹-的文本节点）垂直居中"><a href="#将匿名容器（即没有被标签包裹-的文本节点）垂直居中" class="headerlink" title="将匿名容器（即没有被标签包裹 的文本节点）垂直居中"></a>将匿名容器（即没有被标签包裹 的文本节点）垂直居中</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span>Center me, please!<span class="tag">&lt;/<span class="name">main</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">main &#123; </div><div class="line">  display: flex; </div><div class="line">  align-items: center; </div><div class="line">  justify-content: center; </div><div class="line">  width: 18em; </div><div class="line">  height: 10em; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oeryvxt85.bkt.clouddn.com/2017-07-02-Screen%20Shot%202016-09-16%20at%204.53.51%20PM.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“44 年前我们就把人类送上月球了， 但现在我们仍然无法在 CSS 中 实现垂直居中。”&lt;/p&gt;
&lt;p&gt;—— &lt;a href=&quot;https://twitter.com/jsa/ status/358603820516917249&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;James Anderson&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 CSS 中对元素进行水平居中是非常简单的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果它是一个行内元素， 就对它的父元素应用 text-align: center ；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果它是一个块级元素，就对 它自身应用 margin: auto 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但是一旦涉及到垂直居中绝对是一个难题。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>GitBook 使用指南</title>
    <link href="http://yoursite.com/2017/02/19/gitbook-1/"/>
    <id>http://yoursite.com/2017/02/19/gitbook-1/</id>
    <published>2017-02-19T06:54:57.000Z</published>
    <updated>2017-07-22T02:15:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近尝试用 GitBook 发布笔记，但是在创建的时候发现有不少困难，网上的教程有不能完美解决（大多内容比较老），故把我的创建过程记录下来，以供参考。<br><a id="more"></a></p>
<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><ul>
<li>申请 <a href="https://github.com/" target="_blank" rel="external">GitHub 账号</a>。</li>
<li>申请 <a href="https://www.gitbook.com" target="_blank" rel="external">GitBook 账号</a>(可以通过 GitHub 账号登录)。</li>
</ul>
<h2 id="新建个人仓库"><a href="#新建个人仓库" class="headerlink" title="新建个人仓库"></a>新建个人仓库</h2><h4 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h4><ol>
<li><p>点击屏幕右上角的「+」号，选择「New repository」，如图所示：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%201.36.34%20PM.png" alt=""></p>
</li>
<li><p>填写项目名称,最好与你的 GitBook 电子书的名字一致,这样可以方便管理，如图所示：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%201.42.49%20PM.png" alt=""></p>
</li>
<li><p>翻到创建好的页面最下方，点击「Import code」，如图所示：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%201.47.35%20PM.png" alt=""></p>
</li>
<li><p>进入「Import your project to GitHub」页面，先停留在这个页面，我们开始进入 GitBook 界面进行设置。<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%201.50.17%20PM.png" alt=""></p>
</li>
</ol>
<h4 id="GitBook"><a href="#GitBook" class="headerlink" title="GitBook"></a>GitBook</h4><ol>
<li><p>打开 GitBook 页面，点击右上角「+ New Book」按钮，如图所示：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%201.53.18%20PM.png" alt=""></p>
</li>
<li><p>进入「Create a new book」页面，按如图所示设置，然后点击「Create Book」按钮：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%201.55.11%20PM.png" alt=""></p>
</li>
<li><p>打开「SETTINGS」选项卡，点击「Edit」标签的三角符号，然后复制下面那行地址，如图所示：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19--Users-Clarence-Desktop-Screen%20Shot%202017-02-19%20at%201.58.29%20PM.png" alt=""></p>
</li>
</ol>
<h2 id="绑定-GitHub-与-GitBook"><a href="#绑定-GitHub-与-GitBook" class="headerlink" title="绑定 GitHub 与 GitBook"></a>绑定 GitHub 与 GitBook</h2><ol>
<li><p>返回 GitHub 停留的页面，把复制的地址粘贴进去，点击「Begin import」。如图所示：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%202.06.09%20PM-1.png" alt=""></p>
</li>
<li><p>输入 GitBook 账号密码进行绑定（注意是 GitBook 的账号密码）。<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%202.06.09%20PM-1.png" alt=""></p>
</li>
<li><p>出现如下所示页面，表示创建完成（可以进入个人仓库看看是否有 GitBook 中的文件）。<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%202.12.37%20PM.png" alt=""></p>
</li>
<li><p>返回 GitBook 的「SETTINGS」，选择「GitHub」选项卡，然后在右侧选择刚刚创建的仓库，然后点击「sync」。<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%202.19.45%20PM.png" alt=""></p>
</li>
<li><p>出现如下界面表示绑定成功。<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%202.23.25%20PM.png" alt=""></p>
</li>
<li><p>然后，进入 GitHub 进行修改，看看 GitBook 是否同步吧。</p>
</li>
</ol>
<h4 id="番外-GitHub-integration"><a href="#番外-GitHub-integration" class="headerlink" title="番外 GitHub integration"></a>番外 GitHub integration</h4><p>如果出现设置 GitHub integration 可以参考<a href="https://help.gitbook.com/github/can-i-host-on-github.html#github-integration" target="_blank" rel="external">页面</a>，值得注意的是如下这个设置：<img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-select-github-integration-repositories.png" alt=""></p>
<p>如果你选择的是默认的「Only select repositories」选项，可能导致以后创建新的内容时找不到GitHub 上的仓库。</p>
<h2 id="发布更新"><a href="#发布更新" class="headerlink" title="发布更新"></a>发布更新</h2><p>有时在 GitHub 的更改经常更新不成功，这个问题不知道大家有没有出现，如果没有可以忽略。以下是我的解决方法，在设置中更改版本，点击「Save」，如下图所示：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-19-Screen%20Shot%202017-02-19%20at%202.35.11%20PM.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近尝试用 GitBook 发布笔记，但是在创建的时候发现有不少困难，网上的教程有不能完美解决（大多内容比较老），故把我的创建过程记录下来，以供参考。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>居中布局</title>
    <link href="http://yoursite.com/2017/02/09/CSS-%E5%B1%85%E4%B8%AD%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2017/02/09/CSS-居中布局/</id>
    <published>2017-02-09T11:05:18.000Z</published>
    <updated>2017-06-26T18:58:45.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%2052448%20PM.jpg" alt=""></p>
<h3 id="inline-block-text-align"><a href="#inline-block-text-align" class="headerlink" title="inline-block + text-align"></a>inline-block + text-align</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.34.24%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>增加 <code>CSS</code> 属性 <code>inline-block</code> 它的特点是内容有多宽，它就有多宽。效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.35.22%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>CSS</code> 的 <code>text-align</code> 属性对 <code>inline</code> 元素是起作用的，所以在父元素上设置 <code>text-align: center;</code> 效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.39.53%20PM.png" alt=""></p>
<p>优点：兼容性好。（不支持 IE6、IE7）</p>
<p>兼容性解决方法：</p>
<ul>
<li>模拟 <code>inline-block</code> 方法：<ul>
<li><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">display: inline;</div><div class="line">room: 1;</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>缺点：父容器设置 <code>text-align: center;</code> 子元素会继承，导致 DEMO 文字也是居中对齐的。</p>
<p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.child&#123;</div><div class="line">  display: inline-block;</div><div class="line">  text-align: left;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="table-margin"><a href="#table-margin" class="headerlink" title="table + margin"></a>table + margin</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">display</span>: table;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.35.22%20PM.png" alt=""></p>
<p>属性 为 <code>display: table;</code> 的元素，宽度也是内容宽度，但是依然是 <code>block</code> 元素，所以设置 <code>block</code> 元素居中的方法如下（因为 <code>table</code> 元素有宽度，所以不用设置宽度）：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.child&#123;</div><div class="line">  display: table;</div><div class="line">  margin: 0 auto;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.39.53%20PM.png" alt=""></p>
<p>优点：只设置了子元素，兼容性 IE8 以上。</p>
<p>兼容性解决：需要更改 HTML 结构，换成 <code>table</code> 结构。</p>
<h3 id="absolute-transform"><a href="#absolute-transform" class="headerlink" title="absolute + transform"></a>absolute + transform</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>设置 <code>position: absolute;</code> 属性，它的特点是宽度也是由内容决定的。</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.35.22%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>设置 <code>.child</code> 的 <code>left: 50%;</code> 子元素左边元会到中间。效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.02.15%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">translateX</span>(-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>transform: translateX(-50%);</code>表示往左偏移自身宽度的一半。效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.39.53%20PM.png" alt=""></p>
<p>优点：因为绝对定位元素脱离文档流，所以它不会对其它元素产生影响。</p>
<p>缺点：兼容性不好，IE6、IE7、IE8 不支持。</p>
<h3 id="flex-justify-content"><a href="#flex-justify-content" class="headerlink" title="flex + justify-content"></a>flex + justify-content</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>父元素设置 <code>display: flex;</code> 子元素成为为 <code>flex item</code>，子元素默认宽度变为 <code>auto</code>。效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.35.22%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">justify-content</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%205.39.53%20PM.png" alt=""></p>
<p>优点：只需要设置父元素（也可以设置子元素 <code>margin: 0 auto;</code>，效果一样。）</p>
<p>缺点：兼容性不好，IE6、IE7、IE8 不支持。</p>
<h2 id="垂直居中"><a href="#垂直居中" class="headerlink" title="垂直居中"></a>垂直居中</h2><p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%2062004%20PM.jpg" alt=""></p>
<h3 id="table-cell-vertical-align"><a href="#table-cell-vertical-align" class="headerlink" title="table-cell + vertical-align"></a>table-cell + vertical-align</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.24.10%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: table-cell;</div><div class="line">  <span class="attribute">verical-align</span>: middle;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>设置父元素，让它变为一个单元格，再增加 <code>verical-align: middle;</code> 属性。效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.27.53%20PM.png" alt=""></p>
<p>优点：兼容性比较好（IE8 以上，兼容性解决：把 HTML 结构换为表结构）。</p>
<h3 id="absolute-transform-1"><a href="#absolute-transform-1" class="headerlink" title="absolute + transform"></a>absolute + transform</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.31.27%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.27.53%20PM.png" alt=""></p>
<p>优点：子元素不会干扰其它元素。</p>
<p>缺点：兼容性不好。</p>
<h3 id="flex-align-items"><a href="#flex-align-items" class="headerlink" title="flex + align-items"></a>flex + align-items</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.34.58%20PM.png" alt=""></p>
<p>子元素会充满整个容器，因为子元素 <code>flex item</code> 默认属性是 <code>stretch</code> 拉伸的，所以会充满整个容器。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">align-items</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.27.53%20PM.png" alt=""></p>
<p>优点：只设置父元素。</p>
<p>缺点：兼容性不好。</p>
<h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%2064048%20PM.jpg" alt=""></p>
<h3 id="inline-block-text-align-table-cell-vertical-align"><a href="#inline-block-text-align-table-cell-vertical-align" class="headerlink" title="inline-block + text-align + table-cell + vertical-align"></a>inline-block + text-align + table-cell + vertical-align</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.45.08%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span> &#123;</div><div class="line"></div><div class="line">  <span class="attribute">text-align</span>: center;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span> &#123;</div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.47.15%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span> &#123;</div><div class="line">  <span class="attribute">text-align</span>: center;</div><div class="line">  <span class="attribute">display</span>: table-cell;</div><div class="line">  <span class="attribute">vertical-align</span>: middle;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span> &#123;</div><div class="line">  <span class="attribute">display</span>: inline-block;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.48.37%20PM.png" alt=""></p>
<p>优点：兼容性好</p>
<h3 id="absolute-transform-2"><a href="#absolute-transform-2" class="headerlink" title="absolute + transform"></a>absolute + transform</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.50.54%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.51.43%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">position</span>: relative;</div><div class="line">&#125;</div><div class="line"><span class="selector-class">.child</span>&#123;</div><div class="line">  <span class="attribute">position</span>: absolute;</div><div class="line">  <span class="attribute">left</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">top</span>: <span class="number">50%</span>;</div><div class="line">  <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%,-50%);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.48.37%20PM.png" alt=""></p>
<p>优点：子元素不会对其它元素产生影响。</p>
<p>缺点：兼容性问题。</p>
<h3 id="flex-justify-content-align-items"><a href="#flex-justify-content-align-items" class="headerlink" title="flex + justify-content + align-items"></a>flex + justify-content + align-items</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"parent"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"child"</span>&gt;</span>DEMO<span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.55.29%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">justify-content</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.56.14%20PM.png" alt=""></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.parent</span>&#123;</div><div class="line">  <span class="attribute">display</span>: flex;</div><div class="line">  <span class="attribute">justify-content</span>: center;</div><div class="line">  <span class="attribute">align-items</span>: center;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><img src="http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%20Shot%202017-02-09%20at%206.48.37%20PM.png" alt=""></p>
<p>优点：只设置父元素。</p>
<p>缺点：兼容性问题。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;水平居中&quot;&gt;&lt;a href=&quot;#水平居中&quot; class=&quot;headerlink&quot; title=&quot;水平居中&quot;&gt;&lt;/a&gt;水平居中&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://oeryvxt85.bkt.clouddn.com/2017-02-09-Screen%2
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>代码风格指南（Node.js）</title>
    <link href="http://yoursite.com/2016/10/22/node-style-guide/"/>
    <id>http://yoursite.com/2016/10/22/node-style-guide/</id>
    <published>2016-10-22T12:27:41.000Z</published>
    <updated>2017-07-22T02:14:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2空格缩进"><a href="#2空格缩进" class="headerlink" title="2空格缩进"></a>2空格缩进</h2><p>使用2个空格而不是 tab 来进行代码缩进，同时绝对不要混用空格和 tab 。</p>
<p>Sublime Text 2 设置(perfernces &gt; Settings - User)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&quot;tab_size&quot;: 2,</div><div class="line">&quot;translate_tabs_to_spaces&quot;: true</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>使用 UNIX 风格的换行符 (<code>\n</code>)，同时在每个文件的结尾添加一个换行符。 Windows 风格的换行符 (<code>\r\n</code>) 是绝对禁止出现在任何项目中的。</p>
<p>Sublime Text 2 设置(perfernces &gt; Settings - User)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;default_line_ending&quot;: &quot;unix&quot;</div></pre></td></tr></table></figure>
<h2 id="去除行末尾的多余空格"><a href="#去除行末尾的多余空格" class="headerlink" title="去除行末尾的多余空格"></a>去除行末尾的多余空格</h2><p>就像吃完饭要刷牙一样，在提交 (commit) 代码之前你需要清理掉所有的不必要的空格。</p>
<p>Sublime Text2 设置(perfernces &gt; Settings - User)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;trim_trailing_white_space_on_save&quot;: true</div></pre></td></tr></table></figure>
<h2 id="使用分号"><a href="#使用分号" class="headerlink" title="使用分号"></a>使用分号</h2><p>是否使用分号，在社区争论已久。 isaac 也写过一篇讨论的<a href="http://blog.izs.me/post/2353458699/an-open-letter-to-javascript-leaders-regarding" target="_blank" rel="external">文章</a>， 但是，当可以用廉价的语法来消除一些可能引入的错误的时候，请当一个保守派。</p>
<h2 id="每行80个字符"><a href="#每行80个字符" class="headerlink" title="每行80个字符"></a>每行80个字符</h2><p>限制你每行代码不超过80个字符。尽管现在的显示器越来越大，但是你的大脑并没有变大，并且你还可以把你的大显示器切分成多屏来显示。</p>
<p>Sublime Text 2 设置(perfernces &gt; Settings - User)：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&quot;rulers&quot;: [80]</div></pre></td></tr></table></figure>
<p>多屏：<code>view &gt; Layout &gt; Columns 2</code></p>
<h2 id="使用单引号"><a href="#使用单引号" class="headerlink" title="使用单引号"></a>使用单引号</h2><p>除非编写.json文件，其他时候都请用单引号包裹字符串。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var foo = &apos;bar&apos;;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var foo = &quot;bar&quot;;</div></pre></td></tr></table></figure>
<h2 id="大括号位置"><a href="#大括号位置" class="headerlink" title="大括号位置"></a>大括号位置</h2><p>请把你的所有的左大括号都放在语句开始的这一行。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if (true) &#123;</div><div class="line">  console.log(&apos;winning&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if (true)</div><div class="line">&#123;</div><div class="line">  console.log(&apos;losing&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>同时，请注意在条件判断前后都添加一个空格。</p>
<h2 id="每个变量声明都带一个-var"><a href="#每个变量声明都带一个-var" class="headerlink" title="每个变量声明都带一个 var"></a>每个变量声明都带一个 var</h2><p>每个变量声明都带一个 var ，这样删除或者调整变量声明的顺序会更加容易。 不要把变量都声明在最前面，而是声明在它最有意义的地方。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">var keys   = [&apos;foo&apos;, &apos;bar&apos;];</div><div class="line">var values = [23, 42];</div><div class="line"></div><div class="line">var object = &#123;&#125;;</div><div class="line">while (items.length) &#123;</div><div class="line">  var key = keys.pop();</div><div class="line">  object[key] = values.pop();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">var keys = [&apos;foo&apos;, &apos;bar&apos;],</div><div class="line">    values = [23, 42],</div><div class="line">    object = &#123;&#125;,</div><div class="line">    key;</div><div class="line"></div><div class="line">while (items.length) &#123;</div><div class="line">  key = keys.pop();</div><div class="line">  object[key] = values.pop();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="变量、属性和函数名都采用小驼峰"><a href="#变量、属性和函数名都采用小驼峰" class="headerlink" title="变量、属性和函数名都采用小驼峰"></a>变量、属性和函数名都采用小驼峰</h2><p>变量、属性和函数的命名风格都需要遵循小驼峰风格。 同时所有的命名都是有意义的。 尽量避免用单字符变量和少见单词来命名。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var adminUser = db.query(&apos;SELECT * FROM users ...&apos;);</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">var admin_user = db.query(&apos;SELECT * FROM users ...&apos;);</div><div class="line">var a = db.query(&apos;SELECT * FROM users ...&apos;);</div></pre></td></tr></table></figure>
<h2 id="类名采用大驼峰"><a href="#类名采用大驼峰" class="headerlink" title="类名采用大驼峰"></a>类名采用大驼峰</h2><p>类名都采用大驼峰风格来命名。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">function BankAccount() &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">function bank_Account() &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="用大写来标识常量"><a href="#用大写来标识常量" class="headerlink" title="用大写来标识常量"></a>用大写来标识常量</h2><p>常量变量和对象的静态常量属性都需要特殊表明，通过全部大写的方式来表明。</p>
<p>尽管 Node.js / V8 支持 mozilla 的 const 关键字， 但是不幸的是，对象的属性并不支持这个关键字，而且 const 没有包含于任何一个 ECMA 规范中。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var SECOND = 1 * 1000;</div><div class="line"></div><div class="line">function File() &#123;</div><div class="line">&#125;</div><div class="line">File.FULL_PERMISSIONS = 0777;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">const SECOND = 1 * 1000;</div><div class="line"></div><div class="line">function File() &#123;</div><div class="line">&#125;</div><div class="line">File.fullPermissions = 0777;</div></pre></td></tr></table></figure>
<h2 id="对象、数组的创建"><a href="#对象、数组的创建" class="headerlink" title="对象、数组的创建"></a>对象、数组的创建</h2><p>使用尾随逗号，尽量用一行来声明，只有在编译器不接受的情况下才把对象的 key 用单引号包裹。 使用字面表达式，用<code>{}, []</code>代替 <code>new Array, new Object</code>。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var a = [&apos;hello&apos;, &apos;world&apos;];</div><div class="line">var b = &#123;</div><div class="line">  good: &apos;code&apos;,</div><div class="line">  &apos;is generally&apos;: &apos;pretty&apos;,</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">var a = [</div><div class="line">  &apos;hello&apos;, &apos;world&apos;</div><div class="line">];</div><div class="line">var b = &#123;&quot;good&quot;: &apos;code&apos;</div><div class="line">        , is generally: &apos;pretty&apos;</div><div class="line">        &#125;;</div></pre></td></tr></table></figure>
<h2 id="使用-比较符"><a href="#使用-比较符" class="headerlink" title="使用 === 比较符"></a>使用 === 比较符</h2><p>写代码并不是在背这些 <a href="https://developer.mozilla.org/en/JavaScript/Reference/Operators/Comparison_Operators" target="_blank" rel="external">stupid rules</a> 。使用 === 操作符来进行比较操作，它会完全按照你的期望来执行。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var a = 0;</div><div class="line">if (a === &apos;&apos;) &#123;</div><div class="line">  console.log(&apos;winning&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var a = 0;</div><div class="line">if (a == &apos;&apos;) &#123;</div><div class="line">  console.log(&apos;losing&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="三元操作符分多行"><a href="#三元操作符分多行" class="headerlink" title="三元操作符分多行"></a>三元操作符分多行</h2><p>三元操作符不应该写在一行，将它分割到多行。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var foo = (a === b)</div><div class="line">  ? 1</div><div class="line">  : 2;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">var foo = (a === b) ? 1 : 2;</div></pre></td></tr></table></figure>
<h2 id="不要扩展内建类型"><a href="#不要扩展内建类型" class="headerlink" title="不要扩展内建类型"></a>不要扩展内建类型</h2><p>不要扩展 javascript 内建对象的方法。将来的你会感谢你这个做法的。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">var a = [];</div><div class="line">if (!a.length) &#123;</div><div class="line">  console.log(&apos;winning&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Array.prototype.empty = function() &#123;</div><div class="line">  return !this.length;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var a = [];</div><div class="line">if (a.empty()) &#123;</div><div class="line">  console.log(&apos;losing&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="使用有意义的判断条件"><a href="#使用有意义的判断条件" class="headerlink" title="使用有意义的判断条件"></a>使用有意义的判断条件</h2><p>所有复杂的条件判断都需要赋予一个有意义的名字或者方法。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">var isValidPassword = password.length &gt;= 4 &amp;&amp; /^(?=.*\d).&#123;4,&#125;$/.test(password);</div><div class="line"></div><div class="line">if (isValidPassword) &#123;</div><div class="line">  console.log(&apos;winning&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if (password.length &gt;= 4 &amp;&amp; /^(?=.*\d).&#123;4,&#125;$/.test(password)) &#123;</div><div class="line">  console.log(&apos;losing&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="写精简的函数"><a href="#写精简的函数" class="headerlink" title="写精简的函数"></a>写精简的函数</h2><p>保持你的函数尽可能的精简。 一个好的函数应该能够在幻灯片上一屏显示，并且让坐在教室最后一排的人看清楚。 别再去数你的每一个函数并控制在15行以内了。</p>
<h2 id="尽早的从函数中返回"><a href="#尽早的从函数中返回" class="headerlink" title="尽早的从函数中返回"></a>尽早的从函数中返回</h2><p>为了避免深入嵌套的 if 语句，请尽早的从函数中返回。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function isPercentage(val) &#123;</div><div class="line">  if (val &lt; 0) &#123;</div><div class="line">    return false;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  if (val &gt; 100) &#123;</div><div class="line">    return false;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">function isPercentage(val) &#123;</div><div class="line">  if (val &gt;= 0) &#123;</div><div class="line">    if (val &lt; 100) &#123;</div><div class="line">      return true;</div><div class="line">    &#125; else &#123;</div><div class="line">      return false;</div><div class="line">    &#125;</div><div class="line">  &#125; else &#123;</div><div class="line">    return false;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>针对这个示例，甚至可以进一步精简优化：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">function isPercentage(val) &#123;</div><div class="line">  var isInRange = (val &gt;= 0 &amp;&amp; val &lt;= 100);</div><div class="line">  return isInRange;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="给你的闭包命名"><a href="#给你的闭包命名" class="headerlink" title="给你的闭包命名"></a>给你的闭包命名</h2><p>请尽量给你的闭包、匿名函数命名。 这让人知道你在意这个函数，更重要的是，这将会产生可读性更好的堆栈跟踪和CPU调用信息等。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">req.on(&apos;end&apos;, function onEnd() &#123;</div><div class="line">  console.log(&apos;winning&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">req.on(&apos;end&apos;, function() &#123;</div><div class="line">  console.log(&apos;losing&apos;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="不要嵌套闭包"><a href="#不要嵌套闭包" class="headerlink" title="不要嵌套闭包"></a>不要嵌套闭包</h2><p>使用闭包，但是不要嵌套他们，否则你的代码将会一团糟。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">setTimeout(function() &#123;</div><div class="line">  client.connect(afterConnect);</div><div class="line">&#125;, 1000);</div><div class="line"></div><div class="line">function afterConnect() &#123;</div><div class="line">  console.log(&apos;winning&apos;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">setTimeout(function() &#123;</div><div class="line">  client.connect(function() &#123;</div><div class="line">    console.log(&apos;losing&apos;);</div><div class="line">  &#125;);</div><div class="line">&#125;, 1000);</div></pre></td></tr></table></figure>
<h2 id="使用单行注释风格"><a href="#使用单行注释风格" class="headerlink" title="使用单行注释风格"></a>使用单行注释风格</h2><p>不管是单行注释还是多行注释，都使用 <code>//</code> 。 同时请尝试在更高层次来编写注释（解释函数整体的思路）， 只在解释一些难以理解代码的时候添加注释，而不是给一些琐碎的东西加上注释。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">// &apos;ID_SOMETHING=VALUE&apos; -&gt; [&apos;ID_SOMETHING=VALUE&apos;&apos;, &apos;SOMETHING&apos;, &apos;VALUE&apos;]</div><div class="line">var matches = item.match(/ID_([^\n]+)=([^\n]+)/));</div><div class="line"></div><div class="line">// This function has a nasty side effect where a failure to increment a</div><div class="line">// redis counter used for statistics will cause an exception. This needs</div><div class="line">// to be fixed in a later iteration.</div><div class="line">function loadUser(id, cb) &#123;</div><div class="line">  // ...</div><div class="line">&#125;</div><div class="line"></div><div class="line">var isSessionValid = (session.expires &lt; Date.now());</div><div class="line">if (isSessionValid) &#123;</div><div class="line">  // ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">// Execute a regex</div><div class="line">var matches = item.match(/ID_([^\n]+)=([^\n]+)/));</div><div class="line"></div><div class="line">// Usage: loadUser(5, function() &#123; ... &#125;)</div><div class="line">function loadUser(id, cb) &#123;</div><div class="line">  // ...</div><div class="line">&#125;</div><div class="line"></div><div class="line">// Check if the session is valid</div><div class="line">var isSessionValid = (session.expires &lt; Date.now());</div><div class="line">// If the session is valid</div><div class="line">if (isSessionValid) &#123;</div><div class="line">  // ...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Object-freeze-Object-preventExtensions-Object-seal-with-eval"><a href="#Object-freeze-Object-preventExtensions-Object-seal-with-eval" class="headerlink" title="Object.freeze, Object.preventExtensions, Object.seal, with, eval"></a>Object.freeze, Object.preventExtensions, Object.seal, with, eval</h2><p>这一堆屎一样的东西，你永远都不会需要他们。</p>
<h2 id="Getters-和-Setters"><a href="#Getters-和-Setters" class="headerlink" title="Getters 和 Setters"></a>Getters 和 Setters</h2><p>不要使用 setters ，他们会引发一些使用你的代码的人无法解决的问题。 当没有<a href="http://en.wikipedia.org/wiki/Side_effect_(computer_science" target="_blank" rel="external">副作用</a>)的时候，可以使用 getters，例如提供一个集合类的长度属性的时候。</p>
<h2 id="异步回调函数"><a href="#异步回调函数" class="headerlink" title="异步回调函数"></a>异步回调函数</h2><p>Node 的异步回调函数的第一个参数应该是错误指示，只有这样才能够享受许多流程控制模块的福利。</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">function cb(err, data , ...) &#123;...&#125;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">function cb(data, ...) &#123;...&#125;</div></pre></td></tr></table></figure>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>尽管有许多的方法来实现继承，但是最为推荐的是 Node 的标准写法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">function Socket(options) &#123;</div><div class="line">  // ...</div><div class="line">  stream.Stream.call(this);</div><div class="line">  // ...</div><div class="line">&#125;</div><div class="line"></div><div class="line">util.inherits(Socket, stream.Stream);</div></pre></td></tr></table></figure>
<h2 id="文件命名"><a href="#文件命名" class="headerlink" title="文件命名"></a>文件命名</h2><p>单词之间使用 <code>_</code> underscore 来分割，如果你不想暴露某个文件给用户，你也可以用 _ 来开头</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">child_process.js</div><div class="line">string_decoder.js</div><div class="line">_linklist.js</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">childProcess.js</div><div class="line">stringDecoder.js</div></pre></td></tr></table></figure>
<h2 id="空格"><a href="#空格" class="headerlink" title="空格"></a>空格</h2><p>在所有的操作符前后都添加空格，<code>function</code> 关键字后面添加空格</p>
<p>Right:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var add = function (a, b) &#123;</div><div class="line">  return a + b;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>Wrong:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">var add=function(a,b)&#123;</div><div class="line">  return a+b;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="入乡随俗"><a href="#入乡随俗" class="headerlink" title="入乡随俗"></a>入乡随俗</h2><p>给别人的项目提交 pull request 的时候，要注意遵循项目的编码规范，保持项目编码风格的统一。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2空格缩进&quot;&gt;&lt;a href=&quot;#2空格缩进&quot; class=&quot;headerlink&quot; title=&quot;2空格缩进&quot;&gt;&lt;/a&gt;2空格缩进&lt;/h2&gt;&lt;p&gt;使用2个空格而不是 tab 来进行代码缩进，同时绝对不要混用空格和 tab 。&lt;/p&gt;
&lt;p&gt;Sublime Text 2 设置(perfernces &amp;gt; Settings - User)：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;tab_size&amp;quot;: 2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;translate_tabs_to_spaces&amp;quot;: true&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>中文技术文档的写作规范（下）</title>
    <link href="http://yoursite.com/2016/10/21/document-style-guide3/"/>
    <id>http://yoursite.com/2016/10/21/document-style-guide3/</id>
    <published>2016-10-21T13:03:11.000Z</published>
    <updated>2017-02-10T06:43:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标点符号"><a href="#标点符号" class="headerlink" title="标点符号"></a>标点符号</h2><h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h3><ul>
<li>中文语句的标点符号，均应该采取全角符号，这样可以保证视觉的一致。</li>
<li>如果整句为英文，则该句使用英文/半角标点。</li>
<li>句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。</li>
</ul>
<h3 id="句号"><a href="#句号" class="headerlink" title="句号"></a>句号</h3><p>中文语句中的结尾处应该用全角句号（<code>。</code>）。</p>
<p>句子末尾用括号加注时，句号应在括号之外。</p>
<p><code>错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）</code><br><code>正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。</code></p>
<h3 id="逗号"><a href="#逗号" class="headerlink" title="逗号"></a>逗号</h3><p>逗号<code>，</code>表示句子内部的一般性停顿。</p>
<p>注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。</p>
<a id="more"></a>
<h3 id="顿号"><a href="#顿号" class="headerlink" title="顿号"></a>顿号</h3><p>句子内部的并列词，应该用全角顿号(<code>、</code>) 分隔，而不用逗号，即使并列词是英语也是如此。</p>
<p><code>错误：我最欣赏的科技公司有 Google, Facebook, 腾讯, 阿里和百度等。</code><br><code>正确：我最欣赏的科技公司有 Google、Facebook、腾讯、阿里和百度等。</code></p>
<p>英文句子中，并列词语之间使用半角逗号（<code>,</code>）分隔。</p>
<p><code>例句：Microsoft Office includes Word, Excel, PowerPoint, Outlook and other components.</code></p>
<h3 id="分号"><a href="#分号" class="headerlink" title="分号"></a>分号</h3><p>分号<code>；</code>表示复句内部并列分句之间的停顿。</p>
<h3 id="引号"><a href="#引号" class="headerlink" title="引号"></a>引号</h3><p>引用时，应该使用全角双引号（<code>“ ”</code>），注意前后双引号不同。</p>
<p><code>例句：许多人都认为客户服务的核心是“友好”和“专业”。</code></p>
<p>引号里面还要用引号时，外面一层用双引号，里面一层用单引号（<code>‘ ’</code>），注意前后单引号不同。</p>
<p><code>例句：鲍勃解释道：“我要放音乐，可萨利说，‘不行！’。”</code></p>
<h3 id="圆括号"><a href="#圆括号" class="headerlink" title="圆括号"></a>圆括号</h3><p>补充说明时，使用全角圆括号<code>（）</code>，括号前后不加空格。</p>
<p><code>例句：请确认所有的连接（电缆和接插件）均安装牢固。</code></p>
<h3 id="冒号"><a href="#冒号" class="headerlink" title="冒号"></a>冒号</h3><p>全角冒号（<code>：</code>）常用在需要解释的词语后边，引出解释和说明。</p>
<p><code>例句：请确认以下几项内容：时间、地点、活动名称，以及来宾数量。</code></p>
<p>表示时间时，应使用半角冒号（<code>:</code>）。</p>
<p><code>例句：早上 8:00</code></p>
<h3 id="省略号"><a href="#省略号" class="headerlink" title="省略号"></a>省略号</h3><p>省略号<code>……</code>表示语句未完、或者语气的不连续。它占两个汉字空间、包含六个省略点，不要使用<code>。。。</code>或<code>...</code>等非标准形式。</p>
<p>省略号不应与“等”这个词一起使用。</p>
<p><code>错误：我们为会餐准备了香蕉、苹果、梨…等各色水果。</code></p>
<p><code>正确：我们为会餐准备了各色水果，有香蕉、苹果、梨……</code></p>
<p><code>正确：我们为会餐准备了香蕉、苹果、梨等各色水果。</code></p>
<h3 id="感叹号"><a href="#感叹号" class="headerlink" title="感叹号"></a>感叹号</h3><p>应该使用平静的语气叙述，尽量避免使用感叹号<code>！</code>。</p>
<p>不得多个感叹号连用，比如<code>！！</code>和<code>!!!</code>。</p>
<h3 id="破折号"><a href="#破折号" class="headerlink" title="破折号"></a>破折号</h3><p>破折号<code>————</code>一般用于做进一步解释。破折号应占两个汉字的位置。</p>
<p><code>例句：直觉————尽管它并不总是可靠的————告诉我，这事可能出了些问题。</code></p>
<h3 id="连接号"><a href="#连接号" class="headerlink" title="连接号"></a>连接号</h3><p>连接号用于连接两个类似的词。</p>
<p>以下场合应该使用直线连接号（<code>-</code>），占一个半角字符的位置。</p>
<ul>
<li>两个名词的复合</li>
<li>图表编号</li>
</ul>
<p><code>例句：氧化-还原反应</code></p>
<p><code>例句：图 1-1</code></p>
<p>以下场合应该使用波浪连接号（<code>～</code>），占一个全角字符的位置。</p>
<ul>
<li>数值范围（例如日期、时间或数字）</li>
</ul>
<p><code>例句：2009 年～2011 年</code></p>
<p>注意，波浪连接号前后两个值都应该加上单位。</p>
<p>波浪连接号也可以用汉字“至”代替。</p>
<p><code>例句：周围温度：-20°C 至 -10°C</code></p>
<h2 id="章节结构"><a href="#章节结构" class="headerlink" title="章节结构"></a>章节结构</h2><p>软件手册是一部完整的书，建议采用下面的结构。</p>
<ul>
<li>简介（Introduction）： [必备] [文件] 提供对产品和文档本身的总体的、扼要的说明</li>
<li>快速上手（Getting Started）：[可选] [文件] 如何最快速地使用产品</li>
<li>入门篇（Basics）： [必备] [目录] 又称”使用篇“，提供初级的使用教程<ul>
<li>环境准备（Prerequisite）：[必备] [文件] 软件使用需要满足的前置条件</li>
<li>安装（Installation）：[可选] [文件] 软件的安装方法</li>
<li>设置（Configuration）：[必备] [文件] 软件的设置</li>
</ul>
</li>
<li>进阶篇（Advanced)：[可选] [目录] 又称”开发篇“，提供中高级的开发教程</li>
<li>API（Reference）：[可选] [目录|文件] 软件API的逐一介绍</li>
<li>FAQ：[可选] [文件] 常见问题解答</li>
<li>附录（Appendix）：[可选] [目录] 不属于教程本身、但对阅读教程有帮助的内容<ul>
<li>Glossary：[可选] [文件] 名词解释</li>
<li>Recipes：[可选] [文件] 最佳实践</li>
<li>Troubleshooting：[可选] [文件] 故障处理</li>
<li>ChangeLog：[可选] [文件] 版本说明</li>
<li>Feedback：[可选] [文件] 反馈方式</li>
</ul>
</li>
</ul>
<h3 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h3><ul>
<li><a href="http://redux.js.org/index.html" target="_blank" rel="external">Redux 手册</a></li>
<li><a href="http://flight-manual.atom.io/" target="_blank" rel="external">Atom 手册</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标点符号&quot;&gt;&lt;a href=&quot;#标点符号&quot; class=&quot;headerlink&quot; title=&quot;标点符号&quot;&gt;&lt;/a&gt;标点符号&lt;/h2&gt;&lt;h3 id=&quot;原则&quot;&gt;&lt;a href=&quot;#原则&quot; class=&quot;headerlink&quot; title=&quot;原则&quot;&gt;&lt;/a&gt;原则&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;中文语句的标点符号，均应该采取全角符号，这样可以保证视觉的一致。&lt;/li&gt;
&lt;li&gt;如果整句为英文，则该句使用英文/半角标点。&lt;/li&gt;
&lt;li&gt;句号、问号、叹号、逗号、顿号、分号和冒号不得出现在一行之首。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;句号&quot;&gt;&lt;a href=&quot;#句号&quot; class=&quot;headerlink&quot; title=&quot;句号&quot;&gt;&lt;/a&gt;句号&lt;/h3&gt;&lt;p&gt;中文语句中的结尾处应该用全角句号（&lt;code&gt;。&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;句子末尾用括号加注时，句号应在括号之外。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;错误：关于文件的输出，请参照第 1.3 节（见第 26 页。）&lt;/code&gt;&lt;br&gt;&lt;code&gt;正确：关于文件的输出，请参照第 1.3 节（见第 26 页）。&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;逗号&quot;&gt;&lt;a href=&quot;#逗号&quot; class=&quot;headerlink&quot; title=&quot;逗号&quot;&gt;&lt;/a&gt;逗号&lt;/h3&gt;&lt;p&gt;逗号&lt;code&gt;，&lt;/code&gt;表示句子内部的一般性停顿。&lt;/p&gt;
&lt;p&gt;注意避免“一逗到底”，即整个段落除了结尾，全部停顿都使用逗号。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>中文技术文档的写作规范（中）</title>
    <link href="http://yoursite.com/2016/10/20/document-style-guide2/"/>
    <id>http://yoursite.com/2016/10/20/document-style-guide2/</id>
    <published>2016-10-20T13:59:21.000Z</published>
    <updated>2017-02-10T06:43:48.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h3><ul>
<li>一个段落只能有一个主题，或一个中心句子。</li>
<li>段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为核心句服务。</li>
<li>一个段落的长度不能超过七行，最佳段落长度小于等于四行。</li>
<li>段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。</li>
<li>段落之间使用一个空行隔开。</li>
<li>段落开头不要留出空白字符。</li>
</ul>
<h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>引用第三方内容时，应注明出处。</p>
<p><code>One man’s constant is another man’s variable. — Alan Perlis</code></p>
<p>如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。</p>
<p><code>本文转载自 WikiQuote</code></p>
<p>使用外部图片时，必须在图片下方或文末标明来源。</p>
<p><code>本文部分图片来自 Wikipedia</code></p>
<a id="more"></a>
<h2 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h2><h3 id="半角数字"><a href="#半角数字" class="headerlink" title="半角数字"></a>半角数字</h3><p>数字一律使用半角形式，不得使用全角形式。</p>
<p><code>错误： 这件商品的价格是１０００元。</code></p>
<p><code>正确： 这件商品的价格是 1000 元。</code></p>
<h3 id="千分号"><a href="#千分号" class="headerlink" title="千分号"></a>千分号</h3><p>数值为千位以上，应添加千分号（半角逗号）。</p>
<p><code>XXX 公司的实收资本为 RMB1,258,000。</code></p>
<p>对于 4 ～ 6 位的数值，千分号是选用的，比如<code>1000</code>和<code>1,000</code>都可以接受。对于7位及以上的数值，千分号是必须的。</p>
<p>多位小数要从小数点后从左向右添加千分号，比如<code>4.234,345</code>。</p>
<h3 id="货币"><a href="#货币" class="headerlink" title="货币"></a>货币</h3><p>货币应为阿拉伯数字，并在数字前写出货币符号，或在数字后写出货币中文名称。</p>
<p><code>$1,000</code><br><code>1,000 美元</code></p>
<h3 id="数值范围"><a href="#数值范围" class="headerlink" title="数值范围"></a>数值范围</h3><p>表示数值范围时，用～连接。参见《标点符号》一节的“连接号”部分。</p>
<p>带有单位或百分号时，两个数字都要加上单位或百分号，不能只加后面一个。</p>
<p><code>正确：132kg～234kg</code><br><code>错误：132～234kg</code></p>
<p><code>正确：67%～89%</code><br><code>错误：67～89%</code></p>
<h3 id="变化程度的表示法"><a href="#变化程度的表示法" class="headerlink" title="变化程度的表示法"></a>变化程度的表示法</h3><p>数字的增加要使用“增加了”、“增加到”。“了”表示增量，“到”表示定量。</p>
<p><code>增加到过去的两倍</code><br><code>（过去为一，现在为二）</code></p>
<p><code>增加了两倍</code><br><code>（过去为一，现在为三）</code></p>
<p>数字的减少要使用“降低了”、“降低到”。“了”表示增量，“到”表示定量。</p>
<p><code>降低到百分之八十</code><br><code>（定额是一百，现在是八十）</code></p>
<p><code>降低了百分之八十</code><br><code>（原来是一百，现在是二十）</code></p>
<p>不能用“降低N倍”或“减少N倍”的表示法，要用“降低百分之几”或“减少百分之几”。因为减少（或降低）一倍表示数值原来为一百，现在等于零。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;段落&quot;&gt;&lt;a href=&quot;#段落&quot; class=&quot;headerlink&quot; title=&quot;段落&quot;&gt;&lt;/a&gt;段落&lt;/h2&gt;&lt;h3 id=&quot;原则&quot;&gt;&lt;a href=&quot;#原则&quot; class=&quot;headerlink&quot; title=&quot;原则&quot;&gt;&lt;/a&gt;原则&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一个段落只能有一个主题，或一个中心句子。&lt;/li&gt;
&lt;li&gt;段落的中心句子放在段首，对全段内容进行概述。后面陈述的句子为核心句服务。&lt;/li&gt;
&lt;li&gt;一个段落的长度不能超过七行，最佳段落长度小于等于四行。&lt;/li&gt;
&lt;li&gt;段落的句子语气要使用陈述和肯定语气，避免使用感叹语气。&lt;/li&gt;
&lt;li&gt;段落之间使用一个空行隔开。&lt;/li&gt;
&lt;li&gt;段落开头不要留出空白字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h3&gt;&lt;p&gt;引用第三方内容时，应注明出处。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;One man’s constant is another man’s variable. — Alan Perlis&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果是全篇转载，请在全文开头显著位置注明作者和出处，并链接至原文。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;本文转载自 WikiQuote&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用外部图片时，必须在图片下方或文末标明来源。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;本文部分图片来自 Wikipedia&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>中文技术文档的写作规范（上）</title>
    <link href="http://yoursite.com/2016/10/19/document-style-guide/"/>
    <id>http://yoursite.com/2016/10/19/document-style-guide/</id>
    <published>2016-10-19T14:52:40.000Z</published>
    <updated>2017-02-10T06:44:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><h3 id="层级"><a href="#层级" class="headerlink" title="层级"></a>层级</h3><p>标题分为四级。</p>
<ul>
<li>一级标题：文章的标题</li>
<li>二级标题：文章主要部分的大标题</li>
<li>三级标题：二级标题下面一级的小标题</li>
<li>四级标题：三级标题下面某一方面的小标题</li>
</ul>
<h3 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h3><ul>
<li>一级标题下，不能直接出现三级标题。</li>
<li>标题要避免孤立编号（即同级标题只有一个）。</li>
<li>下级标题不重复上一级标题的内容。</li>
<li>谨慎使用四级标题，尽量避免出现，保持层级的简单和防止出现过于复杂的章节。如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。</li>
</ul>
<a id="more"></a>
<h2 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h2><h3 id="字间距"><a href="#字间距" class="headerlink" title="字间距"></a>字间距</h3><p>全角中文字符与半角英文字符之间，应有一个半角空格。</p>
<p><code>错误：本文介绍如何快速启动Windows系统。</code></p>
<p><code>正确：本文介绍如何快速启动 Windows 系统。</code></p>
<p>全角中文字符与半角阿拉伯数字之间，建议有一个半角空格。</p>
<p><code>不推荐：2011年5月15日，我订购了5台笔记本电脑与10台平板电脑。</code></p>
<p><code>推荐：2011 年 5 月 15 日，我订购了 5 台笔记本电脑与 10 台平板电脑。</code></p>
<p>半角的百分号，视同阿拉伯数字。</p>
<p>英文单位若不翻译，单位前的阿拉伯数字与单位间不留空格。</p>
<p><code>错误：一部容量为 16 GB 的智能手机</code></p>
<p><code>正确：一部容量为 16GB 的智能手机</code></p>
<p>半角英文字符和半角阿拉伯数字，与全角标点符号之间不留空格。</p>
<p><code>错误：他的电话号码是 13899912345 。</code></p>
<p><code>正确：他的电话号码是 13899912345。</code></p>
<h3 id="句子"><a href="#句子" class="headerlink" title="句子"></a>句子</h3><ul>
<li>句子要避免使用长句。一个句子建议不超过 100 字（正文 3 行）。</li>
<li>句子要使用简单句和并列句，避免使用复合句。</li>
</ul>
<h3 id="写作风格"><a href="#写作风格" class="headerlink" title="写作风格"></a>写作风格</h3><p>如果使用了被动语态，应考虑更改为主动语态。</p>
<p><code>错误：假如此软件尚未被安装，</code></p>
<p><code>正确：假如尚未安装这个软件，</code></p>
<p>不使用非正式的语言风格。</p>
<p><code>错误：Lady Gaga 的演唱会真是酷毙了，从没看过这么给力的表演！！！</code></p>
<p><code>正确：无法参加本次活动，我深感遗憾。</code></p>
<p>用对“的”、“地”、“得”。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">她露出了开心的笑容。</div><div class="line">（形容词＋的＋名词）</div><div class="line"></div><div class="line">她开心地笑了。</div><div class="line">（副词＋地＋动词）</div><div class="line"></div><div class="line">她笑得很开心。</div><div class="line">（动词＋得＋副词）</div></pre></td></tr></table></figure>
<p>使用代词时（比如“其”、“该”、“此”、“这”等词），必须明确指代的内容，保证只有一个含义。</p>
<p><code>错误：从管理系统可以监视中继系统和受其直接控制的分配系统。</code></p>
<p><code>正确：从管理系统可以监视两个系统：中继系统和受中继系统直接控制的分配系统。</code></p>
<p>名词前不要使用过多的形式词。</p>
<p><code>错误：此设备的使用必须在接受过本公司举办的正式的设备培训的技师的指导下进行。</code></p>
<p><code>正确：此设备必须在技师的指导下使用，且指导技师必须接受过由本公司举办的正式设备培训。</code></p>
<p>句子的长度尽量保持在20个字以内；20～29个字的句子，可以接受；39～39个字的句子，语义必须明确，才能接受；多于40个字的句子，在任何情况下都不能接受。</p>
<p><code>错误：本产品适用于从由一台服务器进行动作控制的单一节点结构到由多台服务器进行动作控制的并行处理程序结构等多种体系结构。</code></p>
<p><code>正确：本产品适用于多种体系结构。无论是由一台服务器（单一节点结构），还是由多台服务器（并行处理结构）进行动作控制，均可以使用本产品。</code></p>
<p>同样一个意思，尽量使用肯定句表达，不使用否定句表达。</p>
<p><code>错误：请确认没有接通装置的电源。</code></p>
<p><code>正确：请确认装置的电源已关闭。</code></p>
<p>避免使用双重否定句。</p>
<p><code>错误：没有删除权限的用户，不能删除此文件。</code></p>
<p><code>正确：用户必须拥有删除权限，才能删除此文件。</code></p>
<h3 id="英文处理"><a href="#英文处理" class="headerlink" title="英文处理"></a>英文处理</h3><p>英文原文如果使用了复数形式，翻译成中文时，应该将其还原为单数形式。</p>
<p><code>⋯information stored in random access memory (RAMs)⋯</code></p>
<p><code>应译为“……存储在随机存取存储器（RAM）里的信息……”。</code></p>
<p>外文缩写可以使用半角圆点(.)表示缩写。</p>
<p><code>U.S.A.</code></p>
<p><code>Apple, Inc.</code></p>
<p>表示中文时，英文省略号（⋯）应改为中文省略号（……）。</p>
<p><code>5 minutes later⋯.</code></p>
<p><code>应译为“5 分钟过去了⋯⋯”</code></p>
<p>英文书名或电影名改用中文表达时，双引号应改为直角引号。</p>
<p><code>He published an article entitled &quot;The Future of the Aviation&quot;</code></p>
<p><code>应译为“他发表了一篇名为「航空业的未来」的文章”</code></p>
<p>第一次出现英文词汇时，在括号中给出中文标注。此后再次出现时，直接使用英文缩写即可。</p>
<p><code>IOC（International Olympic Committee，国际奥林匹克委员会）。这样定义后，便可以直接使用“IOC”了。</code></p>
<p>专有名词中每个词第一个字母均应大写，非专有名词则不需要大写。</p>
<p><code>“American Association of Physicists in Medicine”（美国医学物理学家协会）是专有名词，需要大写。</code></p>
<p><code>“online transaction processing”（在线事务处理）不是专有名词，则不应大写。</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;标题&quot;&gt;&lt;a href=&quot;#标题&quot; class=&quot;headerlink&quot; title=&quot;标题&quot;&gt;&lt;/a&gt;标题&lt;/h2&gt;&lt;h3 id=&quot;层级&quot;&gt;&lt;a href=&quot;#层级&quot; class=&quot;headerlink&quot; title=&quot;层级&quot;&gt;&lt;/a&gt;层级&lt;/h3&gt;&lt;p&gt;标题分为四级。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一级标题：文章的标题&lt;/li&gt;
&lt;li&gt;二级标题：文章主要部分的大标题&lt;/li&gt;
&lt;li&gt;三级标题：二级标题下面一级的小标题&lt;/li&gt;
&lt;li&gt;四级标题：三级标题下面某一方面的小标题&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;原则&quot;&gt;&lt;a href=&quot;#原则&quot; class=&quot;headerlink&quot; title=&quot;原则&quot;&gt;&lt;/a&gt;原则&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一级标题下，不能直接出现三级标题。&lt;/li&gt;
&lt;li&gt;标题要避免孤立编号（即同级标题只有一个）。&lt;/li&gt;
&lt;li&gt;下级标题不重复上一级标题的内容。&lt;/li&gt;
&lt;li&gt;谨慎使用四级标题，尽量避免出现，保持层级的简单和防止出现过于复杂的章节。如果三级标题下有并列性的内容，建议只使用项目列表（Item list）。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
  </entry>
  
  <entry>
    <title>Oh My Zsh 简易安装指南</title>
    <link href="http://yoursite.com/2016/10/18/zsh-install/"/>
    <id>http://yoursite.com/2016/10/18/zsh-install/</id>
    <published>2016-10-18T14:20:02.000Z</published>
    <updated>2017-02-10T06:43:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>查看系统有几种 shell<br><code>cat /etc/shells</code></p>
<p>显示如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/bin/bash</div><div class="line">/bin/csh</div><div class="line">/bin/ksh</div><div class="line">/bin/sh</div><div class="line">/bin/tcsh</div><div class="line">/bin/zsh</div></pre></td></tr></table></figure>
<p>Mac 默认会预装了个 zsh</p>
<p>安装zsh（非 Mac 用户）<br>Redhat Linux，执行：<code>sudo yum install zsh</code><br>Ubuntu Linux，执行：<code>sudo apt-get install zsh</code></p>
<a id="more"></a>
<h2 id="开始安装-Oh-My-Zsh"><a href="#开始安装-Oh-My-Zsh" class="headerlink" title="开始安装 Oh My Zsh"></a>开始安装 Oh My Zsh</h2><p>自动安装：<br><code>wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh</code></p>
<p>手动安装：<br><figure class="highlight plain"><figcaption><span>clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</div></pre></td></tr></table></figure></p>
<p>配置:<br>oh my zsh 在安装时已经自动读取当前的环境变量并进行了设置，你可以继续追加其他环境变量。</p>
<p>手动安装完以后可以把当前的PATH变量设置到~/.zshrc中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo &quot;export PATH=$PATH&quot; &gt;&gt; ~/.zshrc</div><div class="line">source ~/.zshrc</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;p&gt;查看系统有几种 shell&lt;br&gt;&lt;code&gt;cat /etc/shells&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/bin/bash&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/bin/csh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/bin/ksh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/bin/sh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/bin/tcsh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/bin/zsh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Mac 默认会预装了个 zsh&lt;/p&gt;
&lt;p&gt;安装zsh（非 Mac 用户）&lt;br&gt;Redhat Linux，执行：&lt;code&gt;sudo yum install zsh&lt;/code&gt;&lt;br&gt;Ubuntu Linux，执行：&lt;code&gt;sudo apt-get install zsh&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="Oh My Zsh" scheme="http://yoursite.com/tags/Oh-My-Zsh/"/>
    
  </entry>
  
  <entry>
    <title>HEXO 搭建个人博客简易入门指南</title>
    <link href="http://yoursite.com/2016/10/09/hexo-install/"/>
    <id>http://yoursite.com/2016/10/09/hexo-install/</id>
    <published>2016-10-09T13:18:03.000Z</published>
    <updated>2017-02-10T06:44:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>此文针对 Mac 环境搭建</p>
<h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><ul>
<li><p>前期准备</p>
<ul>
<li>安装Node</li>
<li>安装Git</li>
<li>申请GitHub</li>
</ul>
</li>
<li><p>正式安装HEXO　</p>
</li>
</ul>
<p>打开命令行工具执行如下安装命令：<br><code>$ sudo npm install -g hexo</code></p>
<ul>
<li>初始化</li>
</ul>
<p><code>$ hexo init blog</code> 创建并初始化一个 blog 文件夹</p>
<ul>
<li>生成静态页面</li>
</ul>
<p><code>$ cd blog</code> 进入创建好的文件夹</p>
<p><code>$ hexo generate （hexo g  也可以）</code> 生成静态页面</p>
<ul>
<li>本地启动</li>
</ul>
<p>启动本地服务，进行文章预览调试，命令：</p>
<p><code>$ hexo server</code></p>
<p>浏览器输入<a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>,进行预览。</p>
<a id="more"></a>
<h2 id="配置Github"><a href="#配置Github" class="headerlink" title="配置Github"></a>配置Github</h2><ul>
<li>创建Repository</li>
</ul>
<p>例：<br>project name：ClarenceNeo.github.io</p>
<p>注：Github Pages的Repository名字是特定的，比如我Github账号是ClarenceNeo，那么我Github Pages Repository名字就是ClarenceNeo.github.io。</p>
<ul>
<li>建立关联</li>
</ul>
<p>现在我们需要修改 blog 目录中的 _config.yml 文件，用 vim 编辑器，命令如下：</p>
<p><code>$ vim _config.yml</code></p>
<p>翻到最下面，更改为如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/ClarenceNeo/ClarenceNeo.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>注意：<code>: 后面用空格</code></p>
<p>执行如下命令使用git部署:</p>
<p><code>$ npm install hexo-deployer-git --save</code></p>
<p>最后执行配置命令：</p>
<p><code>$ hexo deploy</code></p>
<p>然后再浏览器中输入<a href="https://clarenceneo.github.io" target="_blank" rel="external">https://clarenceneo.github.io</a>就行了，我的github的账户叫ClarenceNeo,把这个改成你github的账户名就行了。</p>
<h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>每次部署的步骤，可按以下三步来进行：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>常用命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ hexo new &quot;postName&quot; #新建文章</div><div class="line">$ hexo new page &quot;pageName&quot; #新建页面</div><div class="line">$ hexo generate #生成静态页面至public目录</div><div class="line">$ hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">$ hexo deploy #将.deploy目录部署到GitHub</div><div class="line">$ hexo help  # 查看帮助</div><div class="line">$ hexo version  #查看Hexo的版本</div></pre></td></tr></table></figure>
<p>常用简写:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo n == hexo new</div><div class="line">$ hexo g == hexo generate</div><div class="line">$ hexo s == hexo server</div><div class="line">$ hexo d == hexo deploy</div></pre></td></tr></table></figure>
<p>常用组合:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo d -g #生成部署</div><div class="line">$ hexo s -g #生成预览</div></pre></td></tr></table></figure>
<p>主题：</p>
<p>可以参照这个<a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">主题列表</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;此文针对 Mac 环境搭建&lt;/p&gt;
&lt;h2 id=&quot;配置环境&quot;&gt;&lt;a href=&quot;#配置环境&quot; class=&quot;headerlink&quot; title=&quot;配置环境&quot;&gt;&lt;/a&gt;配置环境&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;前期准备&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装Node&lt;/li&gt;
&lt;li&gt;安装Git&lt;/li&gt;
&lt;li&gt;申请GitHub&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;正式安装HEXO　&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开命令行工具执行如下安装命令：&lt;br&gt;&lt;code&gt;$ sudo npm install -g hexo&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;$ hexo init blog&lt;/code&gt; 创建并初始化一个 blog 文件夹&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;生成静态页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;$ cd blog&lt;/code&gt; 进入创建好的文件夹&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ hexo generate （hexo g  也可以）&lt;/code&gt; 生成静态页面&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;本地启动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启动本地服务，进行文章预览调试，命令：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ hexo server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;浏览器输入&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt;,进行预览。&lt;/p&gt;
    
    </summary>
    
      <category term="tech" scheme="http://yoursite.com/categories/tech/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="博客" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="http://yoursite.com/2016/10/07/hello-Hexo/"/>
    <id>http://yoursite.com/2016/10/07/hello-Hexo/</id>
    <published>2016-10-07T12:51:04.000Z</published>
    <updated>2016-10-07T14:26:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>一直在寻找一个写作的平台，再尝试了各种博客平台（Medium，简书，LOFTER等），也自建过 WordPress 之后，发现始终离自己理想的博客平台存在差距，直到遇见 Hexo。它是在我现有技术水平下可以让我尽可能的掌控自己网站的一种方式，现在开始我要把它作为主力写作平台了。</p>
<p>就从这篇开始吧！！！</p>
<p>Hello Hexo.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一直在寻找一个写作的平台，再尝试了各种博客平台（Medium，简书，LOFTER等），也自建过 WordPress 之后，发现始终离自己理想的博客平台存在差距，直到遇见 Hexo。它是在我现有技术水平下可以让我尽可能的掌控自己网站的一种方式，现在开始我要把它作为主力写作平台
    
    </summary>
    
      <category term="essay" scheme="http://yoursite.com/categories/essay/"/>
    
    
  </entry>
  
</feed>
